// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`linter=ruff fixture=basic version=0.5.3 1`] = `
{
  "issues": [
    {
      "category": "CATEGORY_LINT",
      "documentationUrl": "https://docs.astral.sh/ruff/rules/module-import-not-at-top-of-file",
      "level": "LEVEL_MEDIUM",
      "location": {
        "path": "basic.in.py",
        "range": {
          "endColumn": 11,
          "endLine": 7,
          "startColumn": 1,
          "startLine": 7,
        },
      },
      "message": "Module level import not at top of file",
      "mode": "MODE_BLOCK",
      "ruleKey": "E402",
      "snippet": "import sys",
      "snippetWithContext": "def main():
    try:
        pass
    except (Exception, TypeError):
        pass

import sys
# trunk-ignore(ruff/F401)
import json

class NoDocstring(object):
    def __init__(self, arg1):
        self._attr1 = arg1

class Globe(object):
    def __init__(self):
        self.shape = 'spheroid'",
      "tool": "ruff",
    },
    {
      "category": "CATEGORY_LINT",
      "documentationUrl": "https://docs.astral.sh/ruff/rules/module-import-not-at-top-of-file",
      "level": "LEVEL_MEDIUM",
      "location": {
        "path": "basic.in.py",
        "range": {
          "endColumn": 12,
          "endLine": 9,
          "startColumn": 1,
          "startLine": 9,
        },
      },
      "message": "Module level import not at top of file",
      "mode": "MODE_BLOCK",
      "ruleKey": "E402",
      "snippet": "import json",
      "snippetWithContext": "def main():
    try:
        pass
    except (Exception, TypeError):
        pass

import sys
# trunk-ignore(ruff/F401)
import json

class NoDocstring(object):
    def __init__(self, arg1):
        self._attr1 = arg1

class Globe(object):
    def __init__(self):
        self.shape = 'spheroid'",
      "tool": "ruff",
    },
    {
      "category": "CATEGORY_LINT",
      "documentationUrl": "https://docs.astral.sh/ruff/rules/unused-import",
      "level": "LEVEL_MEDIUM",
      "location": {
        "path": "basic.in.py",
        "range": {
          "endColumn": 12,
          "endLine": 9,
          "startColumn": 8,
          "startLine": 9,
        },
      },
      "message": "\`json\` imported but unused",
      "mode": "MODE_BLOCK",
      "ruleKey": "F401",
      "snippet": "import json",
      "snippetWithContext": "def main():
    try:
        pass
    except (Exception, TypeError):
        pass

import sys
# trunk-ignore(ruff/F401)
import json

class NoDocstring(object):
    def __init__(self, arg1):
        self._attr1 = arg1

class Globe(object):
    def __init__(self):
        self.shape = 'spheroid'",
      "suggestions": [
        {
          "patch": "--- original
+++ modified
@@ -6,7 +6,6 @@

 import sys
 # trunk-ignore(ruff/F401)
-import json

 class NoDocstring(object):
     def __init__(self, arg1):
",
          "replacements": [
            {
              "location": {
                "path": "basic.in.py",
                "range": {
                  "endColumn": 1,
                  "endLine": 10,
                  "startColumn": 1,
                  "startLine": 9,
                },
              },
            },
          ],
          "source": "SUGGESTION_SOURCE_TOOL",
        },
      ],
      "tool": "ruff",
    },
    {
      "category": "CATEGORY_LINT",
      "documentationUrl": "https://docs.astral.sh/ruff/rules/unused-import",
      "level": "LEVEL_MEDIUM",
      "location": {
        "path": "basic.in.py",
        "range": {
          "endColumn": 11,
          "endLine": 7,
          "startColumn": 8,
          "startLine": 7,
        },
      },
      "message": "\`sys\` imported but unused",
      "mode": "MODE_BLOCK",
      "ruleKey": "F401",
      "snippet": "import sys",
      "snippetWithContext": "def main():
    try:
        pass
    except (Exception, TypeError):
        pass

import sys
# trunk-ignore(ruff/F401)
import json

class NoDocstring(object):
    def __init__(self, arg1):
        self._attr1 = arg1

class Globe(object):
    def __init__(self):
        self.shape = 'spheroid'",
      "suggestions": [
        {
          "patch": "--- original
+++ modified
@@ -4,7 +4,6 @@
     except (Exception, TypeError):
         pass

-import sys
 # trunk-ignore(ruff/F401)
 import json

",
          "replacements": [
            {
              "location": {
                "path": "basic.in.py",
                "range": {
                  "endColumn": 1,
                  "endLine": 8,
                  "startColumn": 1,
                  "startLine": 7,
                },
              },
            },
          ],
          "source": "SUGGESTION_SOURCE_TOOL",
        },
      ],
      "tool": "ruff",
    },
    {
      "category": "CATEGORY_STYLE",
      "level": "LEVEL_FMT",
      "location": {
        "path": "basic.in.py",
      },
      "message": "Incorrect formatting, autoformat by running \`qlty fmt\`.",
      "mode": "MODE_BLOCK",
      "onAddedLine": true,
      "ruleKey": "fmt",
      "tool": "ruff",
    },
  ],
}
`;
