config_version = "0"

[plugins.releases.golangci-lint]
github = "golangci/golangci-lint"
download_type = "targz"
strip_components = 1

[plugins.definitions.golangci-lint]
releases = ["golangci-lint"]
runtime = "go"
file_types = ["go"]
latest_version = "2.0.2"
known_good_version = "1.61.0"
config_files = [
  ".golangci.json",
  ".golangci.toml",
  ".golangci.yaml",
  ".golangci.yml",
]
affects_cache = ["go.mod", "go.sum"]
description = "A powerful Go linter runner"
security = true
suggested_mode = "comment"

[[plugins.definitions.golangci-lint.drivers.lint.version]]
version_matcher = "<2.0.0"
script = "golangci-lint run --out-format json --timeout 10m --exclude gofmt --allow-parallel-runners --issues-exit-code 0 ${target}"
target = { type = "literal", path = "./..." }
runs_from = { type = "root_or_parent_with", path = "go.mod" }
success_codes = [0, 2, 7]
output = "stdout"
output_format = "golangci_lint"
suggested = "targets"
output_missing = "parse"

[[plugins.definitions.golangci-lint.drivers.lint.version]]
version_matcher = ">=2.0.0"
script = "golangci-lint run --output.json.path ${tmpfile} --timeout 10m --allow-parallel-runners --issues-exit-code 0 ${target}"
target = { type = "literal", path = "./..." }
runs_from = { type = "root_or_parent_with", path = "go.mod" }
success_codes = [0, 2, 7]
output = "tmpfile"
output_format = "golangci_lint"
suggested = "targets"
output_missing = "parse"

[[plugins.definitions.golangci-lint.environment]]
name = "PATH"
list = ["${linter}", "${runtime}/bin", "${env.PATH}"]

[[plugins.definitions.golangci-lint.environment]]
name = "GOLANGCI_LINT_CACHE"
value = "${cachedir}"

[[plugins.definitions.golangci-lint.environment]]
name = "GO111MODULE"
value = "auto"
