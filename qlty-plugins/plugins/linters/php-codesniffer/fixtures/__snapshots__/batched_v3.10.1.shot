// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`linter=php-codesniffer fixture=batched version=3.10.1 1`] = `
{
  "issues": [
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic.php",
        "range": {
          "startColumn": 1,
          "startLine": 5,
        },
      },
      "message": "Spaces must be used to indent lines; tabs are not allowed",
      "mode": "MODE_COMMENT",
      "ruleKey": "Generic.WhiteSpace.DisallowTabIndent.TabsUsed",
      "snippet": "	public function sayHello(DateTimeImutable $date): void",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic.php",
        "range": {
          "startColumn": 1,
          "startLine": 6,
        },
      },
      "message": "Spaces must be used to indent lines; tabs are not allowed",
      "mode": "MODE_COMMENT",
      "ruleKey": "Generic.WhiteSpace.DisallowTabIndent.TabsUsed",
      "snippet": "	{",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic.php",
        "range": {
          "startColumn": 1,
          "startLine": 7,
        },
      },
      "message": "Spaces must be used to indent lines; tabs are not allowed",
      "mode": "MODE_COMMENT",
      "ruleKey": "Generic.WhiteSpace.DisallowTabIndent.TabsUsed",
      "snippet": "		echo 'Hello, ' . $date->format('j. n. Y');",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic.php",
        "range": {
          "startColumn": 1,
          "startLine": 8,
        },
      },
      "message": "Spaces must be used to indent lines; tabs are not allowed",
      "mode": "MODE_COMMENT",
      "ruleKey": "Generic.WhiteSpace.DisallowTabIndent.TabsUsed",
      "snippet": "	}",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic_batched.php",
        "range": {
          "startColumn": 1,
          "startLine": 5,
        },
      },
      "message": "Spaces must be used to indent lines; tabs are not allowed",
      "mode": "MODE_COMMENT",
      "ruleKey": "Generic.WhiteSpace.DisallowTabIndent.TabsUsed",
      "snippet": "	public function sayHello(DateTimeImutable $date): void",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic_batched.php",
        "range": {
          "startColumn": 1,
          "startLine": 6,
        },
      },
      "message": "Spaces must be used to indent lines; tabs are not allowed",
      "mode": "MODE_COMMENT",
      "ruleKey": "Generic.WhiteSpace.DisallowTabIndent.TabsUsed",
      "snippet": "	{",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic_batched.php",
        "range": {
          "startColumn": 1,
          "startLine": 7,
        },
      },
      "message": "Spaces must be used to indent lines; tabs are not allowed",
      "mode": "MODE_COMMENT",
      "ruleKey": "Generic.WhiteSpace.DisallowTabIndent.TabsUsed",
      "snippet": "		echo 'Hello, ' . $date->format('j. n. Y');",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic_batched.php",
        "range": {
          "startColumn": 1,
          "startLine": 8,
        },
      },
      "message": "Spaces must be used to indent lines; tabs are not allowed",
      "mode": "MODE_COMMENT",
      "ruleKey": "Generic.WhiteSpace.DisallowTabIndent.TabsUsed",
      "snippet": "	}",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic.php",
        "range": {
          "startColumn": 1,
          "startLine": 3,
        },
      },
      "message": "Missing doc comment for class HelloWorld",
      "mode": "MODE_COMMENT",
      "ruleKey": "PEAR.Commenting.ClassComment.Missing",
      "snippet": "class HelloWorld",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic_batched.php",
        "range": {
          "startColumn": 1,
          "startLine": 3,
        },
      },
      "message": "Missing doc comment for class HelloWorld",
      "mode": "MODE_COMMENT",
      "ruleKey": "PEAR.Commenting.ClassComment.Missing",
      "snippet": "class HelloWorld",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic.php",
        "range": {
          "startColumn": 7,
          "startLine": 1,
        },
      },
      "message": "Missing file doc comment",
      "mode": "MODE_COMMENT",
      "ruleKey": "PEAR.Commenting.FileComment.Missing",
      "snippet": "<?php declare(strict_types = 1);",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic_batched.php",
        "range": {
          "startColumn": 7,
          "startLine": 1,
        },
      },
      "message": "Missing file doc comment",
      "mode": "MODE_COMMENT",
      "ruleKey": "PEAR.Commenting.FileComment.Missing",
      "snippet": "<?php declare(strict_types = 1);",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic.php",
        "range": {
          "startColumn": 9,
          "startLine": 5,
        },
      },
      "message": "Missing doc comment for function sayHello()",
      "mode": "MODE_COMMENT",
      "ruleKey": "PEAR.Commenting.FunctionComment.Missing",
      "snippet": "	public function sayHello(DateTimeImutable $date): void",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic_batched.php",
        "range": {
          "startColumn": 9,
          "startLine": 5,
        },
      },
      "message": "Missing doc comment for function sayHello()",
      "mode": "MODE_COMMENT",
      "ruleKey": "PEAR.Commenting.FunctionComment.Missing",
      "snippet": "	public function sayHello(DateTimeImutable $date): void",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic.php",
        "range": {
          "startColumn": 2,
          "startLine": 6,
        },
      },
      "message": "Line indented incorrectly; expected at least 4 spaces, found 1",
      "mode": "MODE_COMMENT",
      "ruleKey": "PEAR.WhiteSpace.ScopeIndent.Incorrect",
      "snippet": "	{",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic_batched.php",
        "range": {
          "startColumn": 2,
          "startLine": 6,
        },
      },
      "message": "Line indented incorrectly; expected at least 4 spaces, found 1",
      "mode": "MODE_COMMENT",
      "ruleKey": "PEAR.WhiteSpace.ScopeIndent.Incorrect",
      "snippet": "	{",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic.php",
        "range": {
          "startColumn": 3,
          "startLine": 7,
        },
      },
      "message": "Line indented incorrectly; expected at least 8 spaces, found 2",
      "mode": "MODE_COMMENT",
      "ruleKey": "PEAR.WhiteSpace.ScopeIndent.Incorrect",
      "snippet": "		echo 'Hello, ' . $date->format('j. n. Y');",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic_batched.php",
        "range": {
          "startColumn": 3,
          "startLine": 7,
        },
      },
      "message": "Line indented incorrectly; expected at least 8 spaces, found 2",
      "mode": "MODE_COMMENT",
      "ruleKey": "PEAR.WhiteSpace.ScopeIndent.Incorrect",
      "snippet": "		echo 'Hello, ' . $date->format('j. n. Y');",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic.php",
        "range": {
          "startColumn": 2,
          "startLine": 5,
        },
      },
      "message": "Line indented incorrectly; expected 4 spaces, found 1",
      "mode": "MODE_COMMENT",
      "ruleKey": "PEAR.WhiteSpace.ScopeIndent.IncorrectExact",
      "snippet": "	public function sayHello(DateTimeImutable $date): void",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic.php",
        "range": {
          "startColumn": 2,
          "startLine": 8,
        },
      },
      "message": "Line indented incorrectly; expected 4 spaces, found 1",
      "mode": "MODE_COMMENT",
      "ruleKey": "PEAR.WhiteSpace.ScopeIndent.IncorrectExact",
      "snippet": "	}",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic_batched.php",
        "range": {
          "startColumn": 2,
          "startLine": 5,
        },
      },
      "message": "Line indented incorrectly; expected 4 spaces, found 1",
      "mode": "MODE_COMMENT",
      "ruleKey": "PEAR.WhiteSpace.ScopeIndent.IncorrectExact",
      "snippet": "	public function sayHello(DateTimeImutable $date): void",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
    {
      "category": "CATEGORY_LINT",
      "level": "LEVEL_HIGH",
      "location": {
        "path": "basic_batched.php",
        "range": {
          "startColumn": 2,
          "startLine": 8,
        },
      },
      "message": "Line indented incorrectly; expected 4 spaces, found 1",
      "mode": "MODE_COMMENT",
      "ruleKey": "PEAR.WhiteSpace.ScopeIndent.IncorrectExact",
      "snippet": "	}",
      "snippetWithContext": "<?php declare(strict_types = 1);

class HelloWorld
{
	public function sayHello(DateTimeImutable $date): void
	{
		echo 'Hello, ' . $date->format('j. n. Y');
	}
}",
      "tool": "php-codesniffer",
    },
  ],
}
`;
