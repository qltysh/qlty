{
  "metadata": {
    "id": "[..]",
    "buildId": "[..]",
    "result": "ANALYSIS_RESULT_SUCCESS",
    "filesAnalyzed": 38,
    "startTime": "[..]",
    "finishTime": "[..]",
    "commitMessage": "initial/n",
    "committedAt": "2024-01-01T00:00:00+00:00",
    "committerEmail": "test@codeclimate.com",
    "committerName": "TEST",
    "authorEmail": "test@codeclimate.com",
    "authorName": "TEST",
    "authoredAt": "2024-01-01T00:00:00+00:00",
    "generatedAt": "[..]",
    "time": "[..]"
  },
  "messages": [],
  "invocations": [],
  "issues": [
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "generatedAt": "[..]",
      "time": "[..]",
      "tool": "qlty",
      "driver": "duplication",
      "ruleKey": "similar-code",
      "message": "Found 17 lines of similar code in 2 locations (mass = 97)",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_TSX",
      "category": "CATEGORY_DUPLICATION",
      "snippet": "function f0(numbers): [number, number] {/n  let mean = numbers.reduce((acc, num) => acc + num, 0) / numbers.length;/n/n  let sortedNumbers = numbers.sort();/n  let median;/n/n  if (sortedNumbers.length % 2 === 0) {/n    median =/n      (sortedNumbers[sortedNumbers.length / 2 - 1] +/n        sortedNumbers[sortedNumbers.length / 2]) //n      2;/n  } else {/n    median = sortedNumbers[Math.floor(sortedNumbers.length / 2)];/n  }/n/n  return [mean, median];/n}",
      "snippetWithContext": "function f0(numbers): [number, number] {/n  let mean = numbers.reduce((acc, num) => acc + num, 0) / numbers.length;/n/n  let sortedNumbers = numbers.sort();/n  let median;/n/n  if (sortedNumbers.length % 2 === 0) {/n    median =/n      (sortedNumbers[sortedNumbers.length / 2 - 1] +/n        sortedNumbers[sortedNumbers.length / 2]) //n      2;/n  } else {/n    median = sortedNumbers[Math.floor(sortedNumbers.length / 2)];/n  }/n/n  return [mean, median];/n}/n/nfunction f1(numbers): [number, number] {/n  let mean = numbers.reduce((acc, num) => acc + num, 0) / numbers.length;/n/n  let sortedNumbers = numbers.sort();/n  let median;/n/n  if (sortedNumbers.length % 2 === 0) {/n    median =/n      (sortedNumbers[sortedNumbers.length / 2 - 1] +/n        sortedNumbers[sortedNumbers.length / 2]) /",
      "effortMinutes": 20,
      "value": 17,
      "valueDelta": 2,
      "location": {
        "path": "identical.tsx",
        "range": {
          "startLine": 1,
          "endLine": 17,
          "startByte": 0,
          "endByte": 443
        }
      },
      "otherLocations": [
        {
          "path": "identical.tsx",
          "range": {
            "startLine": 19,
            "endLine": 35
          }
        }
      ],
      "properties": {
        [..],
        [..],
        [..],
        [..]
      },
      "mode": "MODE_BLOCK"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "generatedAt": "[..]",
      "time": "[..]",
      "tool": "qlty",
      "driver": "duplication",
      "ruleKey": "similar-code",
      "message": "Found 17 lines of similar code in 2 locations (mass = 97)",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_TSX",
      "category": "CATEGORY_DUPLICATION",
      "snippet": "function f1(numbers): [number, number] {/n  let mean = numbers.reduce((acc, num) => acc + num, 0) / numbers.length;/n/n  let sortedNumbers = numbers.sort();/n  let median;/n/n  if (sortedNumbers.length % 2 === 0) {/n    median =/n      (sortedNumbers[sortedNumbers.length / 2 - 1] +/n        sortedNumbers[sortedNumbers.length / 2]) //n      2;/n  } else {/n    median = sortedNumbers[Math.floor(sortedNumbers.length / 2)];/n  }/n/n  return [mean, median];/n}",
      "snippetWithContext": "        sortedNumbers[sortedNumbers.length / 2]) //n      2;/n  } else {/n    median = sortedNumbers[Math.floor(sortedNumbers.length / 2)];/n  }/n/n  return [mean, median];/n}/n/nfunction f1(numbers): [number, number] {/n  let mean = numbers.reduce((acc, num) => acc + num, 0) / numbers.length;/n/n  let sortedNumbers = numbers.sort();/n  let median;/n/n  if (sortedNumbers.length % 2 === 0) {/n    median =/n      (sortedNumbers[sortedNumbers.length / 2 - 1] +/n        sortedNumbers[sortedNumbers.length / 2]) //n      2;/n  } else {/n    median = sortedNumbers[Math.floor(sortedNumbers.length / 2)];/n  }/n/n  return [mean, median];/n}",
      "effortMinutes": 20,
      "value": 17,
      "valueDelta": 2,
      "location": {
        "path": "identical.tsx",
        "range": {
          "startLine": 19,
          "endLine": 35,
          "startByte": 445,
          "endByte": 888
        }
      },
      "otherLocations": [
        {
          "path": "identical.tsx",
          "range": {
            "startLine": 1,
            "endLine": 17
          }
        }
      ],
      "properties": {
        [..],
        [..],
        [..],
        [..]
      },
      "mode": "MODE_BLOCK"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "generatedAt": "[..]",
      "time": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "file-complexity",
      "message": "High total complexity (count = 55)",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_TSX",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "function main(): void {/n  let foo = 42;/n  if (foo) {/n    if (foo > 10) {/n      if (foo < 20) {/n        if (foo % 2 === 0) {/n          if (foo % 3 === 0) {/n            if (foo % 5 === 0) {/n              if (foo % 7 === 0) {/n                if (foo % 11 === 0) {/n                  if (foo % 13 === 0) {/n                    if (foo % 17 === 0) {/n                      console.log(/"Nested!/");/n                    }/n                  }/n                }/n              }/n            }/n          }/n        }/n      }/n    }/n  }/n}/n",
      "snippetWithContext": "function main(): void {/n  let foo = 42;/n  if (foo) {/n    if (foo > 10) {/n      if (foo < 20) {/n        if (foo % 2 === 0) {/n          if (foo % 3 === 0) {/n            if (foo % 5 === 0) {/n              if (foo % 7 === 0) {/n                if (foo % 11 === 0) {/n                  if (foo % 13 === 0) {/n                    if (foo % 17 === 0) {/n                      console.log(/"Nested!/");/n                    }/n                  }/n                }/n              }/n            }/n          }/n        }/n      }/n    }/n  }/n}",
      "effortMinutes": 150,
      "value": 55,
      "valueDelta": 5,
      "location": {
        "path": "file_complexity.tsx",
        "range": {
          "startLine": 1,
          "startColumn": 1,
          "endLine": 25,
          "endColumn": 1,
          "startByte": 0,
          "endByte": 521
        }
      },
      "partialFingerprints": {
        "file.path": "file_complexity.tsx"
      },
      "mode": "MODE_BLOCK"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "generatedAt": "[..]",
      "time": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "function-complexity",
      "message": "Function with high complexity (count = 55): main",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_TSX",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "function main(): void {/n  let foo = 42;/n  if (foo) {/n    if (foo > 10) {/n      if (foo < 20) {/n        if (foo % 2 === 0) {/n          if (foo % 3 === 0) {/n            if (foo % 5 === 0) {/n              if (foo % 7 === 0) {/n                if (foo % 11 === 0) {/n                  if (foo % 13 === 0) {/n                    if (foo % 17 === 0) {/n                      console.log(/"Nested!/");/n                    }/n                  }/n                }/n              }/n            }/n          }/n        }/n      }/n    }/n  }/n}",
      "snippetWithContext": "function main(): void {/n  let foo = 42;/n  if (foo) {/n    if (foo > 10) {/n      if (foo < 20) {/n        if (foo % 2 === 0) {/n          if (foo % 3 === 0) {/n            if (foo % 5 === 0) {/n              if (foo % 7 === 0) {/n                if (foo % 11 === 0) {/n                  if (foo % 13 === 0) {/n                    if (foo % 17 === 0) {/n                      console.log(/"Nested!/");/n                    }/n                  }/n                }/n              }/n            }/n          }/n        }/n      }/n    }/n  }/n}",
      "effortMinutes": 195,
      "value": 55,
      "valueDelta": 37,
      "location": {
        "path": "file_complexity.tsx",
        "range": {
          "startLine": 1,
          "startColumn": 1,
          "endLine": 24,
          "endColumn": 2,
          "startByte": 0,
          "endByte": 520
        }
      },
      "partialFingerprints": {
        "function.name": "main"
      },
      "mode": "MODE_BLOCK"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "generatedAt": "[..]",
      "time": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "function-parameters",
      "message": "Function with many parameters (count = 6): f2",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_TSX",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "(a, b, c, d, e, f)",
      "snippetWithContext": "function f0(): void {}/n/nfunction f1(dog, cat): void {}/n/nfunction f2(a, b, c, d, e, f): void {}/n/nfunction f3(): void {/n  // Function calls don't count, only function definitions/n  const foo = bar(1, 2, 3, 4);/n}",
      "effortMinutes": 15,
      "value": 6,
      "location": {
        "path": "parameters.tsx",
        "range": {
          "startLine": 5,
          "startColumn": 12,
          "endLine": 5,
          "endColumn": 30,
          "startByte": 67,
          "endByte": 85
        }
      },
      "mode": "MODE_BLOCK"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "generatedAt": "[..]",
      "time": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "nested-control-flow",
      "message": "Deeply nested control flow (level = 5)",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_TSX",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "if (foo % 3 === 0) {/n            if (foo % 5 === 0) {/n              if (foo % 7 === 0) {/n                if (foo % 11 === 0) {/n                  if (foo % 13 === 0) {/n                    if (foo % 17 === 0) {/n                      console.log(/"Nested!/");/n                    }/n                  }/n                }/n              }/n            }/n          }",
      "snippetWithContext": "function main(): void {/n  let foo = 42;/n  if (foo) {/n    if (foo > 10) {/n      if (foo < 20) {/n        if (foo % 2 === 0) {/n          if (foo % 3 === 0) {/n            if (foo % 5 === 0) {/n              if (foo % 7 === 0) {/n                if (foo % 11 === 0) {/n                  if (foo % 13 === 0) {/n                    if (foo % 17 === 0) {/n                      console.log(/"Nested!/");/n                    }/n                  }/n                }/n              }/n            }/n          }/n        }/n      }/n    }/n  }/n}",
      "effortMinutes": 15,
      "value": 5,
      "location": {
        "path": "file_complexity.tsx",
        "range": {
          "startLine": 7,
          "startColumn": 11,
          "endLine": 19,
          "endColumn": 12,
          "startByte": 134,
          "endByte": 490
        }
      },
      "mode": "MODE_BLOCK"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "generatedAt": "[..]",
      "time": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "nested-control-flow",
      "message": "Deeply nested control flow (level = 5)",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_TSX",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "if (bar % 3 === 0) {/n            console.log(/"Nested!/");/n          }",
      "snippetWithContext": "function simple(): void {}/n/nfunction complex(): void {/n  let bar = 42;/n  if (bar) {/n    if (bar > 10) {/n      if (bar < 20) {/n        if (bar % 2 === 0) {/n          if (bar % 3 === 0) {/n            console.log(/"Nested!/");/n          }/n        }/n      }/n    }/n  }/n}",
      "effortMinutes": 15,
      "value": 5,
      "location": {
        "path": "function_complexity.tsx",
        "range": {
          "startLine": 9,
          "startColumn": 11,
          "endLine": 11,
          "endColumn": 12,
          "startByte": 165,
          "endByte": 233
        }
      },
      "mode": "MODE_BLOCK"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "generatedAt": "[..]",
      "time": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "return-statements",
      "message": "Function with many returns (count = 10): f2",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_TSX",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "function f2(foo): string {/n  switch (foo) {/n    case 1:/n      return /"bar1/";/n    case 2:/n      return /"bar2/";/n    case 3:/n      return /"bar3/";/n    case 4:/n      return /"bar4/";/n    case 5:/n      return /"bar5/";/n    case 6:/n      return /"bar6/";/n    case 7:/n      return /"bar7/";/n    case 8:/n      return /"bar8/";/n    case 9:/n      return /"bar9/";/n    case 10:/n      return /"bar10/";/n    default:/n      throw new Error(/"Invalid foo value/");/n  }/n}",
      "snippetWithContext": "    if (baz) {/n      if (qux) {/n        if (quux) {/n          console.log(/"Deeply nested!/");/n        }/n      }/n    }/n  }/n}/n/nfunction f2(foo): string {/n  switch (foo) {/n    case 1:/n      return /"bar1/";/n    case 2:/n      return /"bar2/";/n    case 3:/n      return /"bar3/";/n    case 4:/n      return /"bar4/";/n    case 5:/n      return /"bar5/";/n    case 6:/n      return /"bar6/";/n    case 7:/n      return /"bar7/";/n    case 8:/n      return /"bar8/";/n    case 9:/n      return /"bar9/";/n    case 10:/n      return /"bar10/";/n    default:/n      throw new Error(/"Invalid foo value/");/n  }/n}",
      "effortMinutes": 35,
      "value": 10,
      "valueDelta": 4,
      "location": {
        "path": "nested_control.tsx",
        "range": {
          "startLine": 33,
          "startColumn": 1,
          "endLine": 58,
          "endColumn": 2,
          "startByte": 536,
          "endByte": 974
        }
      },
      "mode": "MODE_BLOCK"
    }
  ],
  "stats": [
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "boolean_logic.tsx",
      "fullyQualifiedName": "boolean_logic.tsx",
      "path": "boolean_logic.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 2,
      "fields": 0,
      "lines": 9,
      "codeLines": 8,
      "commentLines": 0,
      "blankLines": 1,
      "complexity": 2,
      "cyclomatic": 7,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "count_complex_function.tsx",
      "fullyQualifiedName": "cognitive/count_complex_function.tsx",
      "path": "cognitive/count_complex_function.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 0,
      "lines": 19,
      "codeLines": 19,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 8,
      "cyclomatic": 17,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "count_complex_nested_function.tsx",
      "fullyQualifiedName": "cognitive/count_complex_nested_function.tsx",
      "path": "cognitive/count_complex_nested_function.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 0,
      "lines": 9,
      "codeLines": 9,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 6,
      "cyclomatic": 7,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "count_nesting_loops.tsx",
      "fullyQualifiedName": "cognitive/count_nesting_loops.tsx",
      "path": "cognitive/count_nesting_loops.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 0,
      "lines": 11,
      "codeLines": 10,
      "commentLines": 0,
      "blankLines": 1,
      "complexity": 6,
      "cyclomatic": 5,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "count_ternary.tsx",
      "fullyQualifiedName": "cognitive/count_ternary.tsx",
      "path": "cognitive/count_ternary.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 0,
      "lines": 1,
      "codeLines": 1,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 1,
      "cyclomatic": 2,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "count_binary.tsx",
      "fullyQualifiedName": "cyclomatic/count_binary.tsx",
      "path": "cyclomatic/count_binary.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 0,
      "lines": 2,
      "codeLines": 2,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 2,
      "cyclomatic": 3,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "count_if.tsx",
      "fullyQualifiedName": "cyclomatic/count_if.tsx",
      "path": "cyclomatic/count_if.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 0,
      "lines": 2,
      "codeLines": 2,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 1,
      "cyclomatic": 2,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "count_loop.tsx",
      "fullyQualifiedName": "cyclomatic/count_loop.tsx",
      "path": "cyclomatic/count_loop.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 0,
      "lines": 1,
      "codeLines": 1,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 1,
      "cyclomatic": 2,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "count_no_logic.tsx",
      "fullyQualifiedName": "cyclomatic/count_no_logic.tsx",
      "path": "cyclomatic/count_no_logic.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 1,
      "codeLines": 1,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "cyclo_if_else.tsx",
      "fullyQualifiedName": "cyclomatic/cyclo_if_else.tsx",
      "path": "cyclomatic/cyclo_if_else.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 7,
      "codeLines": 7,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 2,
      "cyclomatic": 2,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "cyclo_if_else_if.tsx",
      "fullyQualifiedName": "cyclomatic/cyclo_if_else_if.tsx",
      "path": "cyclomatic/cyclo_if_else_if.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 7,
      "codeLines": 7,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 2,
      "cyclomatic": 3,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "cyclo_if_else_if_else.tsx",
      "fullyQualifiedName": "cyclomatic/cyclo_if_else_if_else.tsx",
      "path": "cyclomatic/cyclo_if_else_if_else.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 9,
      "codeLines": 9,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 3,
      "cyclomatic": 3,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "iterative_for_of.tsx",
      "fullyQualifiedName": "cyclomatic/iterative_for_of.tsx",
      "path": "cyclomatic/iterative_for_of.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 5,
      "codeLines": 5,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 1,
      "cyclomatic": 2,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "iterative_map.tsx",
      "fullyQualifiedName": "cyclomatic/iterative_map.tsx",
      "path": "cyclomatic/iterative_map.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 5,
      "codeLines": 5,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 2,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "iterative_methods_with_filter_and_include.tsx",
      "fullyQualifiedName": "cyclomatic/iterative_methods_with_filter_and_include.tsx",
      "path": "cyclomatic/iterative_methods_with_filter_and_include.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 15,
      "codeLines": 13,
      "commentLines": 0,
      "blankLines": 2,
      "complexity": 1,
      "cyclomatic": 5,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "basic_declaration.tsx",
      "fullyQualifiedName": "fields/basic_declaration.tsx",
      "path": "fields/basic_declaration.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 1,
      "functions": 0,
      "fields": 1,
      "lines": 3,
      "codeLines": 3,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "class_declaration.tsx",
      "fullyQualifiedName": "fields/class_declaration.tsx",
      "path": "fields/class_declaration.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 1,
      "functions": 1,
      "fields": 2,
      "lines": 11,
      "codeLines": 10,
      "commentLines": 0,
      "blankLines": 1,
      "complexity": 0,
      "cyclomatic": 2,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "declaration_with_access_modifiers.tsx",
      "fullyQualifiedName": "fields/declaration_with_access_modifiers.tsx",
      "path": "fields/declaration_with_access_modifiers.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 1,
      "functions": 0,
      "fields": 4,
      "lines": 6,
      "codeLines": 6,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "declaration_with_initializer.tsx",
      "fullyQualifiedName": "fields/declaration_with_initializer.tsx",
      "path": "fields/declaration_with_initializer.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 1,
      "functions": 0,
      "fields": 1,
      "lines": 3,
      "codeLines": 3,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "ignore_collaborators.tsx",
      "fullyQualifiedName": "fields/ignore_collaborators.tsx",
      "path": "fields/ignore_collaborators.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 0,
      "lines": 2,
      "codeLines": 2,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "multiple.tsx",
      "fullyQualifiedName": "fields/multiple.tsx",
      "path": "fields/multiple.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 2,
      "lines": 2,
      "codeLines": 2,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "read.tsx",
      "fullyQualifiedName": "fields/read.tsx",
      "path": "fields/read.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 1,
      "lines": 1,
      "codeLines": 1,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "unique.tsx",
      "fullyQualifiedName": "fields/unique.tsx",
      "path": "fields/unique.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 1,
      "lines": 2,
      "codeLines": 2,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "write.tsx",
      "fullyQualifiedName": "fields/write.tsx",
      "path": "fields/write.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 1,
      "lines": 1,
      "codeLines": 1,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "file_complexity.tsx",
      "fullyQualifiedName": "file_complexity.tsx",
      "path": "file_complexity.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 24,
      "codeLines": 24,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 55,
      "cyclomatic": 27,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "function_complexity.tsx",
      "fullyQualifiedName": "function_complexity.tsx",
      "path": "function_complexity.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 2,
      "fields": 0,
      "lines": 16,
      "codeLines": 15,
      "commentLines": 0,
      "blankLines": 1,
      "complexity": 15,
      "cyclomatic": 12,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "function_with_onclick_in_tsx.tsx",
      "fullyQualifiedName": "functions/function_with_onclick_in_tsx.tsx",
      "path": "functions/function_with_onclick_in_tsx.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 2,
      "functions": 2,
      "fields": 0,
      "lines": 39,
      "codeLines": 34,
      "commentLines": 0,
      "blankLines": 5,
      "complexity": 3,
      "cyclomatic": 6,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "functional_components_with_props.tsx",
      "fullyQualifiedName": "functions/functional_components_with_props.tsx",
      "path": "functions/functional_components_with_props.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 1,
      "functions": 2,
      "fields": 0,
      "lines": 13,
      "codeLines": 10,
      "commentLines": 0,
      "blankLines": 3,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "functional_components_without_props.tsx",
      "fullyQualifiedName": "functions/functional_components_without_props.tsx",
      "path": "functions/functional_components_without_props.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 2,
      "fields": 0,
      "lines": 9,
      "codeLines": 7,
      "commentLines": 0,
      "blankLines": 2,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "identical.tsx",
      "fullyQualifiedName": "identical.tsx",
      "path": "identical.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 2,
      "fields": 0,
      "lines": 35,
      "codeLines": 28,
      "commentLines": 0,
      "blankLines": 7,
      "complexity": 4,
      "cyclomatic": 25,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "lcom_0.tsx",
      "fullyQualifiedName": "lcom/lcom_0.tsx",
      "path": "lcom/lcom_0.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 2,
      "functions": 5,
      "fields": 1,
      "lines": 21,
      "codeLines": 15,
      "commentLines": 1,
      "blankLines": 5,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "lcom_1-1.tsx",
      "fullyQualifiedName": "lcom/lcom_1-1.tsx",
      "path": "lcom/lcom_1-1.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 1,
      "functions": 2,
      "fields": 0,
      "lines": 9,
      "codeLines": 6,
      "commentLines": 1,
      "blankLines": 2,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 1,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "lcom_1.tsx",
      "fullyQualifiedName": "lcom/lcom_1.tsx",
      "path": "lcom/lcom_1.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 1,
      "functions": 2,
      "fields": 1,
      "lines": 9,
      "codeLines": 6,
      "commentLines": 1,
      "blankLines": 2,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 1,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "lcom_2.tsx",
      "fullyQualifiedName": "lcom/lcom_2.tsx",
      "path": "lcom/lcom_2.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 2,
      "functions": 6,
      "fields": 3,
      "lines": 25,
      "codeLines": 18,
      "commentLines": 1,
      "blankLines": 6,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 2,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "lines.tsx",
      "fullyQualifiedName": "lines.tsx",
      "path": "lines.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 3,
      "fields": 0,
      "lines": 25,
      "codeLines": 12,
      "commentLines": 9,
      "blankLines": 4,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "nested_control.tsx",
      "fullyQualifiedName": "nested_control.tsx",
      "path": "nested_control.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 4,
      "fields": 0,
      "lines": 58,
      "codeLines": 54,
      "commentLines": 0,
      "blankLines": 4,
      "complexity": 26,
      "cyclomatic": 28,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "parameters.tsx",
      "fullyQualifiedName": "parameters.tsx",
      "path": "parameters.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 4,
      "fields": 0,
      "lines": 10,
      "codeLines": 6,
      "commentLines": 1,
      "blankLines": 3,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "returns.tsx",
      "fullyQualifiedName": "returns.tsx",
      "path": "returns.tsx",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_TSX",
      "files": 1,
      "classes": 0,
      "functions": 5,
      "fields": 0,
      "lines": 23,
      "codeLines": 19,
      "commentLines": 0,
      "blankLines": 4,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "cognitive",
      "fullyQualifiedName": "cognitive",
      "path": "cognitive",
      "kind": "COMPONENT_TYPE_DIRECTORY",
      "files": 4,
      "classes": 0,
      "functions": 0,
      "fields": 0,
      "lines": 40,
      "codeLines": 39,
      "commentLines": 0,
      "blankLines": 1,
      "complexity": 21,
      "cyclomatic": 31,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "cyclomatic",
      "fullyQualifiedName": "cyclomatic",
      "path": "cyclomatic",
      "kind": "COMPONENT_TYPE_DIRECTORY",
      "files": 10,
      "classes": 0,
      "functions": 7,
      "fields": 0,
      "lines": 54,
      "codeLines": 52,
      "commentLines": 0,
      "blankLines": 2,
      "complexity": 13,
      "cyclomatic": 25,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "fields",
      "fullyQualifiedName": "fields",
      "path": "fields",
      "kind": "COMPONENT_TYPE_DIRECTORY",
      "files": 9,
      "classes": 4,
      "functions": 1,
      "fields": 13,
      "lines": 31,
      "codeLines": 30,
      "commentLines": 0,
      "blankLines": 1,
      "complexity": 0,
      "cyclomatic": 10,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "functions",
      "fullyQualifiedName": "functions",
      "path": "functions",
      "kind": "COMPONENT_TYPE_DIRECTORY",
      "files": 3,
      "classes": 3,
      "functions": 6,
      "fields": 0,
      "lines": 61,
      "codeLines": 51,
      "commentLines": 0,
      "blankLines": 10,
      "complexity": 3,
      "cyclomatic": 8,
      "lcom4": 0,
      "generatedAt": "[..]",
      "time": "[..]"
    },
    {
      "analysisId": [..],
      "buildId": [..],
      "analyzedAt": [..],
      "name": "lcom",
      "fullyQualifiedName": "lcom",
      "path": "lcom",
      "kind": "COMPONENT_TYPE_DIRECTORY",
      "files": 4,
      "classes": 6,
      "functions": 15,
      "fields": 5,
      "lines": 64,
      "codeLines": 45,
      "commentLines": 4,
      "blankLines": 15,
      "complexity": 0,
      "cyclomatic": 4,
      "lcom4": 4,
      "generatedAt": "[..]",
      "time": "[..]"
    }
  ]
}
