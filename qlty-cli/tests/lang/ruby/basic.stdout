{
  "metadata": {
    "id": "[..]",
    "buildId": "[..]",
    "result": "ANALYSIS_RESULT_SUCCESS",
    "filesAnalyzed": 62,
    "startTime": "[..]",
    "finishTime": "[..]",
    "commitMessage": "initial/n",
    "committedAt": "2024-01-01T00:00:00+00:00",
    "committerEmail": "test@codeclimate.com",
    "committerName": "TEST",
    "authorEmail": "test@codeclimate.com",
    "authorName": "TEST",
    "authoredAt": "2024-01-01T00:00:00+00:00"
  },
  "messages": [],
  "invocations": [],
  "issues": [
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "boolean-logic",
      "message": "Complex binary expression",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_RUBY",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "foo0 && foo1 &&     # +1/n  foo2",
      "snippetWithContext": "def logical_sequences/n  true/n  foo0 && foo1 &&     # +1/n  foo2 || foo3 ||     # +1/n  foo4 and foo9       # +1/n  foo4 || foo9        # +1/n  foo6 && foo7        # +1/n  foo6 || foo7        # +1/n  foo6 || foo7/n  foo6 || foo7/n  foo6 || foo7/n  foo6 || foo7/n  foo6 || foo7/n  foo6 || foo7",
      "effortMinutes": 10,
      "value": 4,
      "location": {
        "path": "cognitive/count_complex_logical_operator_sequence.rb",
        "range": {
          "startLine": 3,
          "startColumn": 3,
          "endLine": 4,
          "endColumn": 7,
          "startByte": 31,
          "endByte": 62
        }
      },
      "mode": "MODE_BLOCK"
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "boolean-logic",
      "message": "Complex binary expression",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_RUBY",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "foo3 || foo4",
      "snippetWithContext": "def foo/n  return foo0 && foo1 && (foo2 || (foo3 || foo4)) && foo5/nend",
      "effortMinutes": 10,
      "value": 4,
      "location": {
        "path": "cognitive/count_nested_logical_expressions.rb",
        "range": {
          "startLine": 2,
          "startColumn": 36,
          "endLine": 2,
          "endColumn": 48,
          "startByte": 43,
          "endByte": 55
        }
      },
      "mode": "MODE_BLOCK"
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "boolean-logic",
      "message": "Complex binary expression",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_RUBY",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "cat && dog",
      "snippetWithContext": "def foo/n  foo || cat && dog && mouse || bar/nend",
      "effortMinutes": 10,
      "value": 4,
      "location": {
        "path": "cognitive/count_non_sequential_logical_operators.rb",
        "range": {
          "startLine": 2,
          "startColumn": 10,
          "endLine": 2,
          "endColumn": 20,
          "startByte": 17,
          "endByte": 27
        }
      },
      "mode": "MODE_BLOCK"
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "file-complexity",
      "message": "High total complexity (count = 55)",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_RUBY",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "def main/n    foo = 42/n    if foo/n        if foo > 10/n            if foo < 20/n                if foo % 2 == 0/n                    if foo % 3 == 0/n                        if foo % 5 == 0/n                            if foo % 7 == 0/n                                if foo % 11 == 0/n                                    if foo % 13 == 0/n                                        if foo % 17 == 0/n                                            puts /"Nested!/"/n                                        end/n                                    end/n                                end/n                            end/n                        end/n                    end/n                end/n            end/n        end/n    end/nend/n",
      "snippetWithContext": "def main/n    foo = 42/n    if foo/n        if foo > 10/n            if foo < 20/n                if foo % 2 == 0/n                    if foo % 3 == 0/n                        if foo % 5 == 0/n                            if foo % 7 == 0/n                                if foo % 11 == 0/n                                    if foo % 13 == 0/n                                        if foo % 17 == 0/n                                            puts /"Nested!/"/n                                        end/n                                    end/n                                end/n                            end/n                        end/n                    end/n                end/n            end/n        end/n    end/nend",
      "effortMinutes": 150,
      "value": 55,
      "valueDelta": 5,
      "location": {
        "path": "file_complexity.rb",
        "range": {
          "startLine": 1,
          "startColumn": 1,
          "endLine": 25,
          "endColumn": 1,
          "startByte": 0,
          "endByte": 711
        }
      },
      "partialFingerprints": {
        "file.path": "file_complexity.rb"
      },
      "mode": "MODE_BLOCK"
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "function-complexity",
      "message": "Function with high complexity (count = 55): main",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_RUBY",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "def main/n    foo = 42/n    if foo/n        if foo > 10/n            if foo < 20/n                if foo % 2 == 0/n                    if foo % 3 == 0/n                        if foo % 5 == 0/n                            if foo % 7 == 0/n                                if foo % 11 == 0/n                                    if foo % 13 == 0/n                                        if foo % 17 == 0/n                                            puts /"Nested!/"/n                                        end/n                                    end/n                                end/n                            end/n                        end/n                    end/n                end/n            end/n        end/n    end/nend",
      "snippetWithContext": "def main/n    foo = 42/n    if foo/n        if foo > 10/n            if foo < 20/n                if foo % 2 == 0/n                    if foo % 3 == 0/n                        if foo % 5 == 0/n                            if foo % 7 == 0/n                                if foo % 11 == 0/n                                    if foo % 13 == 0/n                                        if foo % 17 == 0/n                                            puts /"Nested!/"/n                                        end/n                                    end/n                                end/n                            end/n                        end/n                    end/n                end/n            end/n        end/n    end/nend",
      "effortMinutes": 195,
      "value": 55,
      "valueDelta": 37,
      "location": {
        "path": "file_complexity.rb",
        "range": {
          "startLine": 1,
          "startColumn": 1,
          "endLine": 24,
          "endColumn": 4,
          "startByte": 0,
          "endByte": 710
        }
      },
      "partialFingerprints": {
        "function.name": "main"
      },
      "mode": "MODE_BLOCK"
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "function-parameters",
      "message": "Function with many parameters (count = 6): f2",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_RUBY",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "(a,b,c,d,e,f)",
      "snippetWithContext": "def f0/nend/n/ndef f1(dog, cat)/nend/n/ndef f2(a,b,c,d,e,f)/nend/n/ndef f3/n    # Function calls don't count, only function definitions/n    foo = bar(1, 2, 3, 4)/nend",
      "effortMinutes": 15,
      "value": 6,
      "location": {
        "path": "parameters.rb",
        "range": {
          "startLine": 7,
          "startColumn": 7,
          "endLine": 7,
          "endColumn": 20,
          "startByte": 40,
          "endByte": 53
        }
      },
      "mode": "MODE_BLOCK"
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "nested-control-flow",
      "message": "Deeply nested control flow (level = 5)",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_RUBY",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "if foo % 3 == 0/n                        if foo % 5 == 0/n                            if foo % 7 == 0/n                                if foo % 11 == 0/n                                    if foo % 13 == 0/n                                        if foo % 17 == 0/n                                            puts /"Nested!/"/n                                        end/n                                    end/n                                end/n                            end/n                        end/n                    end",
      "snippetWithContext": "def main/n    foo = 42/n    if foo/n        if foo > 10/n            if foo < 20/n                if foo % 2 == 0/n                    if foo % 3 == 0/n                        if foo % 5 == 0/n                            if foo % 7 == 0/n                                if foo % 11 == 0/n                                    if foo % 13 == 0/n                                        if foo % 17 == 0/n                                            puts /"Nested!/"/n                                        end/n                                    end/n                                end/n                            end/n                        end/n                    end/n                end/n            end/n        end/n    end/nend",
      "effortMinutes": 15,
      "value": 5,
      "location": {
        "path": "file_complexity.rb",
        "range": {
          "startLine": 7,
          "startColumn": 21,
          "endLine": 19,
          "endColumn": 24,
          "startByte": 129,
          "endByte": 650
        }
      },
      "mode": "MODE_BLOCK"
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "nested-control-flow",
      "message": "Deeply nested control flow (level = 5)",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_RUBY",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "if bar % 3 == 0/n                        puts /"Nested!/"/n                    end",
      "snippetWithContext": "def simple/nend/n/ndef complex/n    bar = 42/n    if bar/n        if bar > 10/n            if bar < 20/n                if bar % 2 == 0/n                    if bar % 3 == 0/n                        puts /"Nested!/"/n                    end/n                end/n            end/n        end/n    end/nend",
      "effortMinutes": 15,
      "value": 5,
      "location": {
        "path": "function_complexity.rb",
        "range": {
          "startLine": 10,
          "startColumn": 21,
          "endLine": 12,
          "endColumn": 24,
          "startByte": 148,
          "endByte": 226
        }
      },
      "mode": "MODE_BLOCK"
    }
  ],
  "stats": [
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "boolean_logic.rb",
      "fullyQualifiedName": "boolean_logic.rb",
      "path": "boolean_logic.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 2,
      "fields": 0,
      "lines": 9,
      "codeLines": 8,
      "commentLines": 0,
      "blankLines": 1,
      "complexity": 2,
      "cyclomatic": 7,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_catch_rescue_statements.rb",
      "fullyQualifiedName": "cognitive/count_catch_rescue_statements.rb",
      "path": "cognitive/count_catch_rescue_statements.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 5,
      "codeLines": 5,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 1,
      "cyclomatic": 3,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_complex_logical_operator_sequence.rb",
      "fullyQualifiedName": "cognitive/count_complex_logical_operator_sequence.rb",
      "path": "cognitive/count_complex_logical_operator_sequence.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 16,
      "codeLines": 16,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 7,
      "cyclomatic": 16,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_conditional_assignment.rb",
      "fullyQualifiedName": "cognitive/count_conditional_assignment.rb",
      "path": "cognitive/count_conditional_assignment.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 4,
      "codeLines": 4,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 2,
      "cyclomatic": 3,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_function_with_ternary.rb",
      "fullyQualifiedName": "cognitive/count_function_with_ternary.rb",
      "path": "cognitive/count_function_with_ternary.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 4,
      "codeLines": 4,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 1,
      "cyclomatic": 4,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_if_elsif.rb",
      "fullyQualifiedName": "cognitive/count_if_elsif.rb",
      "path": "cognitive/count_if_elsif.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 9,
      "codeLines": 9,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 3,
      "cyclomatic": 6,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_multiple_if_statements.rb",
      "fullyQualifiedName": "cognitive/count_multiple_if_statements.rb",
      "path": "cognitive/count_multiple_if_statements.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 7,
      "codeLines": 6,
      "commentLines": 0,
      "blankLines": 1,
      "complexity": 2,
      "cyclomatic": 3,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_nested_if_else.rb",
      "fullyQualifiedName": "cognitive/count_nested_if_else.rb",
      "path": "cognitive/count_nested_if_else.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 13,
      "codeLines": 13,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 5,
      "cyclomatic": 6,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_nested_in_method_like_structures.rb",
      "fullyQualifiedName": "cognitive/count_nested_in_method_like_structures.rb",
      "path": "cognitive/count_nested_in_method_like_structures.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 16,
      "codeLines": 14,
      "commentLines": 0,
      "blankLines": 2,
      "complexity": 6,
      "cyclomatic": 5,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_nested_logical_expressions.rb",
      "fullyQualifiedName": "cognitive/count_nested_logical_expressions.rb",
      "path": "cognitive/count_nested_logical_expressions.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 3,
      "codeLines": 3,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 3,
      "cyclomatic": 6,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_nested_rescue_statements.rb",
      "fullyQualifiedName": "cognitive/count_nested_rescue_statements.rb",
      "path": "cognitive/count_nested_rescue_statements.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 11,
      "codeLines": 9,
      "commentLines": 0,
      "blankLines": 2,
      "complexity": 6,
      "cyclomatic": 7,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_nested_while_statements.rb",
      "fullyQualifiedName": "cognitive/count_nested_while_statements.rb",
      "path": "cognitive/count_nested_while_statements.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 8,
      "codeLines": 8,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 6,
      "cyclomatic": 4,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_nesting_for_catch_rescue_statements.rb",
      "fullyQualifiedName": "cognitive/count_nesting_for_catch_rescue_statements.rb",
      "path": "cognitive/count_nesting_for_catch_rescue_statements.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 11,
      "codeLines": 10,
      "commentLines": 0,
      "blankLines": 1,
      "complexity": 10,
      "cyclomatic": 6,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_nesting_for_switch_statements.rb",
      "fullyQualifiedName": "cognitive/count_nesting_for_switch_statements.rb",
      "path": "cognitive/count_nesting_for_switch_statements.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 11,
      "codeLines": 11,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 10,
      "cyclomatic": 5,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_nesting_for_while_statements.rb",
      "fullyQualifiedName": "cognitive/count_nesting_for_while_statements.rb",
      "path": "cognitive/count_nesting_for_while_statements.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 10,
      "codeLines": 10,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 10,
      "cyclomatic": 5,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_non_sequential_logical_operators.rb",
      "fullyQualifiedName": "cognitive/count_non_sequential_logical_operators.rb",
      "path": "cognitive/count_non_sequential_logical_operators.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 3,
      "codeLines": 3,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 3,
      "cyclomatic": 5,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_recursion.rb",
      "fullyQualifiedName": "cognitive/count_recursion.rb",
      "path": "cognitive/count_recursion.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 3,
      "codeLines": 3,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 1,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_recursive_calls_with_other_elements.rb",
      "fullyQualifiedName": "cognitive/count_recursive_calls_with_other_elements.rb",
      "path": "cognitive/count_recursive_calls_with_other_elements.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 7,
      "codeLines": 7,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 4,
      "cyclomatic": 5,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_simple_logical_operator_sequences.rb",
      "fullyQualifiedName": "cognitive/count_simple_logical_operator_sequences.rb",
      "path": "cognitive/count_simple_logical_operator_sequences.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 4,
      "codeLines": 4,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 4,
      "cyclomatic": 5,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_switch_statements.rb",
      "fullyQualifiedName": "cognitive/count_switch_statements.rb",
      "path": "cognitive/count_switch_statements.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 6,
      "codeLines": 6,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 1,
      "cyclomatic": 3,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "does_not_increment_for_eponymous_method_called_on_object.rb",
      "fullyQualifiedName": "cognitive/does_not_increment_for_eponymous_method_called_on_object.rb",
      "path": "cognitive/does_not_increment_for_eponymous_method_called_on_object.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 3,
      "codeLines": 3,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "does_not_increment_recursion_for_class_method.rb",
      "fullyQualifiedName": "cognitive/does_not_increment_recursion_for_class_method.rb",
      "path": "cognitive/does_not_increment_recursion_for_class_method.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 1,
      "functions": 1,
      "fields": 0,
      "lines": 5,
      "codeLines": 5,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 1
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "increments_nesting_level_for_each_switch_statement.rb",
      "fullyQualifiedName": "cognitive/increments_nesting_level_for_each_switch_statement.rb",
      "path": "cognitive/increments_nesting_level_for_each_switch_statement.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 11,
      "codeLines": 11,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 6,
      "cyclomatic": 4,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "no_params_with_parenthesis.rb",
      "fullyQualifiedName": "cognitive/no_params_with_parenthesis.rb",
      "path": "cognitive/no_params_with_parenthesis.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 3,
      "codeLines": 3,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 1,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "recursion_no_params_with_self.rb",
      "fullyQualifiedName": "cognitive/recursion_no_params_with_self.rb",
      "path": "cognitive/recursion_no_params_with_self.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 3,
      "codeLines": 3,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 1,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "empty_function.rb",
      "fullyQualifiedName": "cyclomatic/empty_function.rb",
      "path": "cyclomatic/empty_function.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 2,
      "codeLines": 2,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "empty_if.rb",
      "fullyQualifiedName": "cyclomatic/empty_if.rb",
      "path": "cyclomatic/empty_if.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 4,
      "codeLines": 4,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 1,
      "cyclomatic": 2,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "if_else.rb",
      "fullyQualifiedName": "cyclomatic/if_else.rb",
      "path": "cyclomatic/if_else.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 7,
      "codeLines": 7,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 2,
      "cyclomatic": 2,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "if_elsif.rb",
      "fullyQualifiedName": "cyclomatic/if_elsif.rb",
      "path": "cyclomatic/if_elsif.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 7,
      "codeLines": 7,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 2,
      "cyclomatic": 3,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "if_elsif_else.rb",
      "fullyQualifiedName": "cyclomatic/if_elsif_else.rb",
      "path": "cyclomatic/if_elsif_else.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 9,
      "codeLines": 9,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 3,
      "cyclomatic": 3,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "if_with_conjunction.rb",
      "fullyQualifiedName": "cyclomatic/if_with_conjunction.rb",
      "path": "cyclomatic/if_with_conjunction.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 4,
      "codeLines": 4,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 2,
      "cyclomatic": 3,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "if_with_var.rb",
      "fullyQualifiedName": "cyclomatic/if_with_var.rb",
      "path": "cyclomatic/if_with_var.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 5,
      "codeLines": 5,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 1,
      "cyclomatic": 2,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "iterative_each.rb",
      "fullyQualifiedName": "cyclomatic/iterative_each.rb",
      "path": "cyclomatic/iterative_each.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 7,
      "codeLines": 6,
      "commentLines": 0,
      "blankLines": 1,
      "complexity": 0,
      "cyclomatic": 2,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "iterative_each_with_select.rb",
      "fullyQualifiedName": "cyclomatic/iterative_each_with_select.rb",
      "path": "cyclomatic/iterative_each_with_select.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 11,
      "codeLines": 10,
      "commentLines": 0,
      "blankLines": 1,
      "complexity": 0,
      "cyclomatic": 5,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "iterative_for.rb",
      "fullyQualifiedName": "cyclomatic/iterative_for.rb",
      "path": "cyclomatic/iterative_for.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 5,
      "codeLines": 5,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 1,
      "cyclomatic": 2,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "iterative_map.rb",
      "fullyQualifiedName": "cyclomatic/iterative_map.rb",
      "path": "cyclomatic/iterative_map.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 6,
      "codeLines": 6,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 2,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "non_iterative_do.rb",
      "fullyQualifiedName": "cyclomatic/non_iterative_do.rb",
      "path": "cyclomatic/non_iterative_do.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 5,
      "codeLines": 5,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "single_variable.rb",
      "fullyQualifiedName": "cyclomatic/single_variable.rb",
      "path": "cyclomatic/single_variable.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 3,
      "codeLines": 3,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "while_loop.rb",
      "fullyQualifiedName": "cyclomatic/while_loop.rb",
      "path": "cyclomatic/while_loop.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 4,
      "codeLines": 4,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 1,
      "cyclomatic": 2,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "class_declaration.rb",
      "fullyQualifiedName": "fields/class_declaration.rb",
      "path": "fields/class_declaration.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 1,
      "functions": 1,
      "fields": 4,
      "lines": 12,
      "codeLines": 11,
      "commentLines": 0,
      "blankLines": 1,
      "complexity": 0,
      "cyclomatic": 2,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "ignore_collaborators.rb",
      "fullyQualifiedName": "fields/ignore_collaborators.rb",
      "path": "fields/ignore_collaborators.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 0,
      "lines": 2,
      "codeLines": 2,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "manual_method_declaration.rb",
      "fullyQualifiedName": "fields/manual_method_declaration.rb",
      "path": "fields/manual_method_declaration.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 2,
      "fields": 1,
      "lines": 7,
      "codeLines": 6,
      "commentLines": 0,
      "blankLines": 1,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "multiple.rb",
      "fullyQualifiedName": "fields/multiple.rb",
      "path": "fields/multiple.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 2,
      "lines": 2,
      "codeLines": 2,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "read.rb",
      "fullyQualifiedName": "fields/read.rb",
      "path": "fields/read.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 1,
      "lines": 1,
      "codeLines": 1,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "struct_declaration.rb",
      "fullyQualifiedName": "fields/struct_declaration.rb",
      "path": "fields/struct_declaration.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 2,
      "lines": 1,
      "codeLines": 1,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "unique.rb",
      "fullyQualifiedName": "fields/unique.rb",
      "path": "fields/unique.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 1,
      "lines": 2,
      "codeLines": 2,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "write.rb",
      "fullyQualifiedName": "fields/write.rb",
      "path": "fields/write.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 2,
      "lines": 2,
      "codeLines": 2,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "file_complexity.rb",
      "fullyQualifiedName": "file_complexity.rb",
      "path": "file_complexity.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 24,
      "codeLines": 24,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 55,
      "cyclomatic": 27,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "function_complexity.rb",
      "fullyQualifiedName": "function_complexity.rb",
      "path": "function_complexity.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 2,
      "fields": 0,
      "lines": 17,
      "codeLines": 16,
      "commentLines": 0,
      "blankLines": 1,
      "complexity": 15,
      "cyclomatic": 12,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "methods_with_parameters.rb",
      "fullyQualifiedName": "functions/methods_with_parameters.rb",
      "path": "functions/methods_with_parameters.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 1,
      "functions": 2,
      "fields": 2,
      "lines": 10,
      "codeLines": 9,
      "commentLines": 0,
      "blankLines": 1,
      "complexity": 0,
      "cyclomatic": 2,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "methods_without_parameters.rb",
      "fullyQualifiedName": "functions/methods_without_parameters.rb",
      "path": "functions/methods_without_parameters.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 1,
      "functions": 4,
      "fields": 2,
      "lines": 10,
      "codeLines": 8,
      "commentLines": 0,
      "blankLines": 2,
      "complexity": 0,
      "cyclomatic": 2,
      "lcom4": 1
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "singleton_methods_with_parameters.rb",
      "fullyQualifiedName": "functions/singleton_methods_with_parameters.rb",
      "path": "functions/singleton_methods_with_parameters.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 1,
      "functions": 1,
      "fields": 0,
      "lines": 5,
      "codeLines": 5,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 2,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "singleton_methods_without_parameters.rb",
      "fullyQualifiedName": "functions/singleton_methods_without_parameters.rb",
      "path": "functions/singleton_methods_without_parameters.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 1,
      "functions": 1,
      "fields": 0,
      "lines": 5,
      "codeLines": 5,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "identical.rb",
      "fullyQualifiedName": "identical.rb",
      "path": "identical.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 2,
      "fields": 0,
      "lines": 27,
      "codeLines": 22,
      "commentLines": 0,
      "blankLines": 5,
      "complexity": 4,
      "cyclomatic": 19,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "lcom_0.rb",
      "fullyQualifiedName": "lcom/lcom_0.rb",
      "path": "lcom/lcom_0.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 2,
      "functions": 3,
      "fields": 0,
      "lines": 17,
      "codeLines": 13,
      "commentLines": 1,
      "blankLines": 3,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "lcom_1-1.rb",
      "fullyQualifiedName": "lcom/lcom_1-1.rb",
      "path": "lcom/lcom_1-1.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 1,
      "functions": 1,
      "fields": 0,
      "lines": 7,
      "codeLines": 5,
      "commentLines": 1,
      "blankLines": 1,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 1
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "lcom_1.rb",
      "fullyQualifiedName": "lcom/lcom_1.rb",
      "path": "lcom/lcom_1.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 1,
      "functions": 1,
      "fields": 0,
      "lines": 7,
      "codeLines": 5,
      "commentLines": 1,
      "blankLines": 1,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 1
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "lcom_2.rb",
      "fullyQualifiedName": "lcom/lcom_2.rb",
      "path": "lcom/lcom_2.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 2,
      "functions": 4,
      "fields": 0,
      "lines": 21,
      "codeLines": 16,
      "commentLines": 1,
      "blankLines": 4,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 2
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "lines.rb",
      "fullyQualifiedName": "lines.rb",
      "path": "lines.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 3,
      "fields": 0,
      "lines": 25,
      "codeLines": 12,
      "commentLines": 10,
      "blankLines": 3,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "nested_control.rb",
      "fullyQualifiedName": "nested_control.rb",
      "path": "nested_control.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 4,
      "fields": 0,
      "lines": 58,
      "codeLines": 55,
      "commentLines": 0,
      "blankLines": 3,
      "complexity": 27,
      "cyclomatic": 27,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "parameters.rb",
      "fullyQualifiedName": "parameters.rb",
      "path": "parameters.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 4,
      "fields": 0,
      "lines": 13,
      "codeLines": 9,
      "commentLines": 1,
      "blankLines": 3,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "returns.rb",
      "fullyQualifiedName": "returns.rb",
      "path": "returns.rb",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_RUBY",
      "files": 1,
      "classes": 0,
      "functions": 5,
      "fields": 0,
      "lines": 24,
      "codeLines": 20,
      "commentLines": 0,
      "blankLines": 4,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "cognitive",
      "fullyQualifiedName": "cognitive",
      "path": "cognitive",
      "kind": "COMPONENT_TYPE_DIRECTORY",
      "files": 24,
      "classes": 1,
      "functions": 24,
      "fields": 0,
      "lines": 176,
      "codeLines": 170,
      "commentLines": 0,
      "blankLines": 6,
      "complexity": 93,
      "cyclomatic": 106,
      "lcom4": 1
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "cyclomatic",
      "fullyQualifiedName": "cyclomatic",
      "path": "cyclomatic",
      "kind": "COMPONENT_TYPE_DIRECTORY",
      "files": 14,
      "classes": 0,
      "functions": 14,
      "fields": 0,
      "lines": 79,
      "codeLines": 77,
      "commentLines": 0,
      "blankLines": 2,
      "complexity": 13,
      "cyclomatic": 31,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "fields",
      "fullyQualifiedName": "fields",
      "path": "fields",
      "kind": "COMPONENT_TYPE_DIRECTORY",
      "files": 8,
      "classes": 1,
      "functions": 3,
      "fields": 13,
      "lines": 29,
      "codeLines": 27,
      "commentLines": 0,
      "blankLines": 2,
      "complexity": 0,
      "cyclomatic": 9,
      "lcom4": 0
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "functions",
      "fullyQualifiedName": "functions",
      "path": "functions",
      "kind": "COMPONENT_TYPE_DIRECTORY",
      "files": 4,
      "classes": 4,
      "functions": 8,
      "fields": 4,
      "lines": 30,
      "codeLines": 27,
      "commentLines": 0,
      "blankLines": 3,
      "complexity": 0,
      "cyclomatic": 7,
      "lcom4": 1
    },
    {
      "analysisId": "[..]",
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "lcom",
      "fullyQualifiedName": "lcom",
      "path": "lcom",
      "kind": "COMPONENT_TYPE_DIRECTORY",
      "files": 4,
      "classes": 6,
      "functions": 9,
      "fields": 0,
      "lines": 52,
      "codeLines": 39,
      "commentLines": 4,
      "blankLines": 9,
      "complexity": 0,
      "cyclomatic": 4,
      "lcom4": 4
    }
  ]
}
