{
  "metadata": {
    "id": "[..]",
    "buildId": "[..]",
    "result": "ANALYSIS_RESULT_SUCCESS",
    "filesAnalyzed": 43,
    "startTime": "[..]",
    "finishTime": "[..]",
    "commitMessage": "initial/n",
    "committedAt": "2024-01-01T00:00:00+00:00",
    "committerEmail": "test@codeclimate.com",
    "committerName": "TEST",
    "authorEmail": "test@codeclimate.com",
    "authorName": "TEST",
    "authoredAt": "2024-01-01T00:00:00+00:00"
  },
  "messages": [],
  "invocations": [],
  "issues": [
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "tool": "qlty",
      "driver": "duplication",
      "ruleKey": "similar-code",
      "message": "Found 15 lines of similar code in 2 locations (mass = 114)",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_PHP",
      "category": "CATEGORY_DUPLICATION",
      "snippet": "function f0($numbers) {/n    $mean = array_sum($numbers) / count($numbers);/n/n    $sortedNumbers = $numbers;/n    sort($sortedNumbers);/n    $median;/n/n    if(count($sortedNumbers) % 2 === 0) {/n      $median = ($sortedNumbers[count($sortedNumbers) / 2 - 1] + $sortedNumbers[count($sortedNumbers) / 2]) / 2;/n    } else {/n      $median = $sortedNumbers[floor(count($sortedNumbers) / 2)];/n    }/n/n    return [$mean, $median];/n  }",
      "snippetWithContext": "<?php/n  function f0($numbers) {/n    $mean = array_sum($numbers) / count($numbers);/n/n    $sortedNumbers = $numbers;/n    sort($sortedNumbers);/n    $median;/n/n    if(count($sortedNumbers) % 2 === 0) {/n      $median = ($sortedNumbers[count($sortedNumbers) / 2 - 1] + $sortedNumbers[count($sortedNumbers) / 2]) / 2;/n    } else {/n      $median = $sortedNumbers[floor(count($sortedNumbers) / 2)];/n    }/n/n    return [$mean, $median];/n  }/n/n/n  function f1($numbers) {/n    $mean = array_sum($numbers) / count($numbers);/n/n    $sortedNumbers = $numbers;/n    sort($sortedNumbers);/n    $median;/n/n    if(count($sortedNumbers) % 2 === 0) {/n      $median = ($sortedNumbers[count($sortedNumbers) / 2 - 1] + $sortedNumbers[count($sortedNumbers) / 2]) / 2;",
      "effortMinutes": 10,
      "value": 15,
      "location": {
        "path": "identical.php",
        "range": {
          "startLine": 2,
          "endLine": 16,
          "startByte": 8,
          "endByte": 428
        }
      },
      "otherLocations": [
        {
          "path": "identical.php",
        [..]
        [..]
        [..]
        [..]
        }
      ],
      "properties": {
        [..]
        [..]
        [..]
        [..]
      },
      "mode": "MODE_BLOCK"
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "tool": "qlty",
      "driver": "duplication",
      "ruleKey": "similar-code",
      "message": "Found 15 lines of similar code in 2 locations (mass = 114)",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_PHP",
      "category": "CATEGORY_DUPLICATION",
      "snippet": "function f1($numbers) {/n    $mean = array_sum($numbers) / count($numbers);/n/n    $sortedNumbers = $numbers;/n    sort($sortedNumbers);/n    $median;/n/n    if(count($sortedNumbers) % 2 === 0) {/n      $median = ($sortedNumbers[count($sortedNumbers) / 2 - 1] + $sortedNumbers[count($sortedNumbers) / 2]) / 2;/n    } else {/n      $median = $sortedNumbers[floor(count($sortedNumbers) / 2)];/n    }/n/n    return [$mean, $median];/n  }",
      "snippetWithContext": "      $median = ($sortedNumbers[count($sortedNumbers) / 2 - 1] + $sortedNumbers[count($sortedNumbers) / 2]) / 2;/n    } else {/n      $median = $sortedNumbers[floor(count($sortedNumbers) / 2)];/n    }/n/n    return [$mean, $median];/n  }/n/n/n  function f1($numbers) {/n    $mean = array_sum($numbers) / count($numbers);/n/n    $sortedNumbers = $numbers;/n    sort($sortedNumbers);/n    $median;/n/n    if(count($sortedNumbers) % 2 === 0) {/n      $median = ($sortedNumbers[count($sortedNumbers) / 2 - 1] + $sortedNumbers[count($sortedNumbers) / 2]) / 2;/n    } else {/n      $median = $sortedNumbers[floor(count($sortedNumbers) / 2)];/n    }/n/n    return [$mean, $median];/n  }/n?>",
      "effortMinutes": 10,
      "value": 15,
      "location": {
        "path": "identical.php",
        "range": {
          "startLine": 19,
          "endLine": 33,
          "startByte": 433,
          "endByte": 853
        }
      },
      "otherLocations": [
        {
          "path": "identical.php",
        [..]
        [..]
        [..]
        [..]
        }
      ],
      "properties": {
        [..]
        [..]
        [..]
        [..]
      },
      "mode": "MODE_BLOCK"
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "boolean-logic",
      "message": "Complex binary expression",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_PHP",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "false && true",
      "snippetWithContext": "<?php/n  function foo() {/n    return true || false && true && false || true;/n  }/n?>",
      "effortMinutes": 10,
      "value": 4,
      "location": {
        "path": "cognitive/count_non_sequential_logical_operators.php",
        "range": {
          "startLine": 3,
          "startColumn": 20,
          "endLine": 3,
          "endColumn": 33,
          "startByte": 44,
          "endByte": 57
        }
      },
      "mode": "MODE_BLOCK"
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "file-complexity",
      "message": "High total complexity (count = 55)",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_PHP",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "<?php/n  function main() {/n    $foo = 42;/n    if ($foo) {/n      if ($foo > 10) {/n        if ($foo < 20) {/n          if ($foo % 2 === 0) {/n            if ($foo % 3 === 0) {/n              if ($foo % 5 === 0) {/n                if ($foo % 7 === 0) {/n                  if ($foo % 11 === 0) {/n                    if ($foo % 13 === 0) {/n                      if ($foo % 17 === 0) {/n                        echo /"Nested!/";/n                      }/n                    }/n                  }/n                }/n              }/n            }/n          }/n        }/n      }/n    }/n  }/n?>/n",
      "snippetWithContext": "<?php/n  function main() {/n    $foo = 42;/n    if ($foo) {/n      if ($foo > 10) {/n        if ($foo < 20) {/n          if ($foo % 2 === 0) {/n            if ($foo % 3 === 0) {/n              if ($foo % 5 === 0) {/n                if ($foo % 7 === 0) {/n                  if ($foo % 11 === 0) {/n                    if ($foo % 13 === 0) {/n                      if ($foo % 17 === 0) {/n                        echo /"Nested!/";/n                      }/n                    }/n                  }/n                }/n              }/n            }/n          }/n        }/n      }/n    }/n  }/n?>",
      "effortMinutes": 150,
      "value": 55,
      "valueDelta": 5,
      "location": {
        "path": "file_complexity.php",
        "range": {
          "startLine": 1,
          "startColumn": 1,
          "endLine": 27,
          "endColumn": 1,
          "startByte": 0,
          "endByte": 571
        }
      },
      "partialFingerprints": {
        "file.path": "file_complexity.php"
      },
      "mode": "MODE_BLOCK"
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "function-complexity",
      "message": "Function with high complexity (count = 55): main",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_PHP",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "function main() {/n    $foo = 42;/n    if ($foo) {/n      if ($foo > 10) {/n        if ($foo < 20) {/n          if ($foo % 2 === 0) {/n            if ($foo % 3 === 0) {/n              if ($foo % 5 === 0) {/n                if ($foo % 7 === 0) {/n                  if ($foo % 11 === 0) {/n                    if ($foo % 13 === 0) {/n                      if ($foo % 17 === 0) {/n                        echo /"Nested!/";/n                      }/n                    }/n                  }/n                }/n              }/n            }/n          }/n        }/n      }/n    }/n  }",
      "snippetWithContext": "<?php/n  function main() {/n    $foo = 42;/n    if ($foo) {/n      if ($foo > 10) {/n        if ($foo < 20) {/n          if ($foo % 2 === 0) {/n            if ($foo % 3 === 0) {/n              if ($foo % 5 === 0) {/n                if ($foo % 7 === 0) {/n                  if ($foo % 11 === 0) {/n                    if ($foo % 13 === 0) {/n                      if ($foo % 17 === 0) {/n                        echo /"Nested!/";/n                      }/n                    }/n                  }/n                }/n              }/n            }/n          }/n        }/n      }/n    }/n  }/n?>",
      "effortMinutes": 195,
      "value": 55,
      "valueDelta": 37,
      "location": {
        "path": "file_complexity.php",
        "range": {
          "startLine": 2,
          "startColumn": 3,
          "endLine": 25,
          "endColumn": 4,
          "startByte": 8,
          "endByte": 567
        }
      },
      "partialFingerprints": {
        "function.name": "main"
      },
      "mode": "MODE_BLOCK"
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "function-parameters",
      "message": "Function with many parameters (count = 6): f2",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_PHP",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "($a, $b, $c, $d, $e, $f)",
      "snippetWithContext": "<?php/n  function f0() {/n  }/n/n  function f1($dog, $cat) {/n  }/n/n  function f2($a, $b, $c, $d, $e, $f) {/n  }/n/n  function f3() {/n    // Function calls don't count, only function definitions/n    $foo = bar(1, 2, 3, 4);/n  }/n?>",
      "effortMinutes": 15,
      "value": 6,
      "location": {
        "path": "parameters.php",
        "range": {
          "startLine": 8,
          "startColumn": 14,
          "endLine": 8,
          "endColumn": 38,
          "startByte": 75,
          "endByte": 99
        }
      },
      "mode": "MODE_BLOCK"
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "nested-control-flow",
      "message": "Deeply nested control flow (level = 5)",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_PHP",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "if ($foo % 3 === 0) {/n              if ($foo % 5 === 0) {/n                if ($foo % 7 === 0) {/n                  if ($foo % 11 === 0) {/n                    if ($foo % 13 === 0) {/n                      if ($foo % 17 === 0) {/n                        echo /"Nested!/";/n                      }/n                    }/n                  }/n                }/n              }/n            }",
      "snippetWithContext": "<?php/n  function main() {/n    $foo = 42;/n    if ($foo) {/n      if ($foo > 10) {/n        if ($foo < 20) {/n          if ($foo % 2 === 0) {/n            if ($foo % 3 === 0) {/n              if ($foo % 5 === 0) {/n                if ($foo % 7 === 0) {/n                  if ($foo % 11 === 0) {/n                    if ($foo % 13 === 0) {/n                      if ($foo % 17 === 0) {/n                        echo /"Nested!/";/n                      }/n                    }/n                  }/n                }/n              }/n            }/n          }/n        }/n      }/n    }/n  }/n?>",
      "effortMinutes": 15,
      "value": 5,
      "location": {
        "path": "file_complexity.php",
        "range": {
          "startLine": 8,
          "startColumn": 13,
          "endLine": 20,
          "endColumn": 14,
          "startByte": 149,
          "endByte": 527
        }
      },
      "mode": "MODE_BLOCK"
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "nested-control-flow",
      "message": "Deeply nested control flow (level = 5)",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_PHP",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "if ($bar % 3 === 0) {/n              echo /"Nested!/";/n            }",
      "snippetWithContext": "<?php/n  function simple() {}/n/n  function complex() {/n    $bar = 42;/n    if ($bar) {/n      if ($bar > 10) {/n        if ($bar < 20) {/n          if ($bar % 2 === 0) {/n            if ($bar % 3 === 0) {/n              echo /"Nested!/";/n            }/n          }/n        }/n      }/n    }/n  }/n?>",
      "effortMinutes": 15,
      "value": 5,
      "location": {
        "path": "function_complexity.php",
        "range": {
          "startLine": 10,
          "startColumn": 13,
          "endLine": 12,
          "endColumn": 14,
          "startByte": 176,
          "endByte": 241
        }
      },
      "mode": "MODE_BLOCK"
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "return-statements",
      "message": "Function with many returns (count = 6): f0",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_PHP",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "function f0($foo) {/n    if ($foo >= 80 && $foo <= 100) {/n      return /"Most complex!/";/n    } else if ($foo >= 60 && $foo <= 79) {/n      return /"Very complex/";/n    } else if ($foo >= 40 && $foo <= 59) {/n      return /"Somewhat complex/";/n    } else if ($foo >= 20 && $foo <= 39) {/n      return /"Not complex/";/n    } else if ($foo >= 0 && $foo <= 19) {/n      return /"Least complex!/";/n    } else {/n      return null;/n    }/n  }",
      "snippetWithContext": "<?php/n  function f0($foo) {/n    if ($foo >= 80 && $foo <= 100) {/n      return /"Most complex!/";/n    } else if ($foo >= 60 && $foo <= 79) {/n      return /"Very complex/";/n    } else if ($foo >= 40 && $foo <= 59) {/n      return /"Somewhat complex/";/n    } else if ($foo >= 20 && $foo <= 39) {/n      return /"Not complex/";/n    } else if ($foo >= 0 && $foo <= 19) {/n      return /"Least complex!/";/n    } else {/n      return null;/n    }/n  }/n?>",
      "effortMinutes": 15,
      "value": 6,
      "location": {
        "path": "cognitive/multiple_conditionals.php",
        "range": {
          "startLine": 2,
          "startColumn": 3,
          "endLine": 16,
          "endColumn": 4,
          "startByte": 8,
          "endByte": 428
        }
      },
      "mode": "MODE_BLOCK"
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "tool": "qlty",
      "driver": "structure",
      "ruleKey": "return-statements",
      "message": "Function with many returns (count = 10): f2",
      "level": "LEVEL_MEDIUM",
      "language": "LANGUAGE_PHP",
      "category": "CATEGORY_STRUCTURE",
      "snippet": "function f2($foo) {/n    switch ($foo) {/n      case 1:/n        return 'bar1';/n      case 2:/n        return 'bar2';/n      case 3:/n        return 'bar3';/n      case 4:/n        return 'bar4';/n      case 5:/n        return 'bar5';/n      case 6:/n        return 'bar6';/n      case 7:/n        return 'bar7';/n      case 8:/n        return 'bar8';/n      case 9:/n        return 'bar9';/n      case 10:/n        return 'bar10';/n      default:/n        throw new Exception('Invalid foo value');/n    }/n  }",
      "snippetWithContext": "      if ($baz) {/n        if ($qux) {/n          if ($quux) {/n            echo 'Deeply nested!';/n          }/n        }/n      }/n    }/n  }/n/n  function f2($foo) {/n    switch ($foo) {/n      case 1:/n        return 'bar1';/n      case 2:/n        return 'bar2';/n      case 3:/n        return 'bar3';/n      case 4:/n        return 'bar4';/n      case 5:/n        return 'bar5';/n      case 6:/n        return 'bar6';/n      case 7:/n        return 'bar7';/n      case 8:/n        return 'bar8';/n      case 9:/n        return 'bar9';/n      case 10:/n        return 'bar10';/n      default:/n        throw new Exception('Invalid foo value');/n    }/n  }/n?>",
      "effortMinutes": 35,
      "value": 10,
      "valueDelta": 4,
      "location": {
        "path": "nested_control.php",
        "range": {
          "startLine": 34,
          "startColumn": 3,
          "endLine": 59,
          "endColumn": 4,
          "startByte": 566,
          "endByte": 1052
        }
      },
      "mode": "MODE_BLOCK"
    }
  ],
  "stats": [
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "boolean_logic.php",
      "fullyQualifiedName": "boolean_logic.php",
      "path": "boolean_logic.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 2,
      "fields": 0,
      "lines": 11,
      "codeLines": 10,
      "commentLines": 0,
      "blankLines": 1,
      "complexity": 2,
      "cyclomatic": 7,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_conditional_assignment.php",
      "fullyQualifiedName": "cognitive/count_conditional_assignment.php",
      "path": "cognitive/count_conditional_assignment.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 6,
      "codeLines": 6,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 2,
      "cyclomatic": 3,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_function_with_ternary.php",
      "fullyQualifiedName": "cognitive/count_function_with_ternary.php",
      "path": "cognitive/count_function_with_ternary.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 6,
      "codeLines": 5,
      "commentLines": 1,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 3,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_non_sequential_logical_operators.php",
      "fullyQualifiedName": "cognitive/count_non_sequential_logical_operators.php",
      "path": "cognitive/count_non_sequential_logical_operators.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 5,
      "codeLines": 5,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 3,
      "cyclomatic": 5,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "count_recursion.php",
      "fullyQualifiedName": "cognitive/count_recursion.php",
      "path": "cognitive/count_recursion.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 5,
      "codeLines": 5,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "multiple_conditionals.php",
      "fullyQualifiedName": "cognitive/multiple_conditionals.php",
      "path": "cognitive/multiple_conditionals.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 17,
      "codeLines": 17,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 7,
      "cyclomatic": 21,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "cyclo_basic.php",
      "fullyQualifiedName": "cyclomatic/cyclo_basic.php",
      "path": "cyclomatic/cyclo_basic.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 5,
      "codeLines": 5,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "cyclo_if.php",
      "fullyQualifiedName": "cyclomatic/cyclo_if.php",
      "path": "cyclomatic/cyclo_if.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 7,
      "codeLines": 7,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 1,
      "cyclomatic": 2,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "cyclo_if_else.php",
      "fullyQualifiedName": "cyclomatic/cyclo_if_else.php",
      "path": "cyclomatic/cyclo_if_else.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 9,
      "codeLines": 9,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 2,
      "cyclomatic": 2,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "cyclo_if_else_if.php",
      "fullyQualifiedName": "cyclomatic/cyclo_if_else_if.php",
      "path": "cyclomatic/cyclo_if_else_if.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 9,
      "codeLines": 9,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 2,
      "cyclomatic": 3,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "cyclo_if_else_if_else.php",
      "fullyQualifiedName": "cyclomatic/cyclo_if_else_if_else.php",
      "path": "cyclomatic/cyclo_if_else_if_else.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 11,
      "codeLines": 11,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 3,
      "cyclomatic": 3,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "empty_function.php",
      "fullyQualifiedName": "cyclomatic/empty_function.php",
      "path": "cyclomatic/empty_function.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 3,
      "codeLines": 3,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "empty_if.php",
      "fullyQualifiedName": "cyclomatic/empty_if.php",
      "path": "cyclomatic/empty_if.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 5,
      "codeLines": 5,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 1,
      "cyclomatic": 2,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "if_with_bool.php",
      "fullyQualifiedName": "cyclomatic/if_with_bool.php",
      "path": "cyclomatic/if_with_bool.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 5,
      "codeLines": 5,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 2,
      "cyclomatic": 3,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "iterative_for_of.php",
      "fullyQualifiedName": "cyclomatic/iterative_for_of.php",
      "path": "cyclomatic/iterative_for_of.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 7,
      "codeLines": 7,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 1,
      "cyclomatic": 3,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "iterative_map.php",
      "fullyQualifiedName": "cyclomatic/iterative_map.php",
      "path": "cyclomatic/iterative_map.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 7,
      "codeLines": 7,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 2,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "iterative_methods_with_filter_and_include.php",
      "fullyQualifiedName": "cyclomatic/iterative_methods_with_filter_and_include.php",
      "path": "cyclomatic/iterative_methods_with_filter_and_include.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 17,
      "codeLines": 14,
      "commentLines": 0,
      "blankLines": 3,
      "complexity": 2,
      "cyclomatic": 5,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "while_loop.php",
      "fullyQualifiedName": "cyclomatic/while_loop.php",
      "path": "cyclomatic/while_loop.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 5,
      "codeLines": 5,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 1,
      "cyclomatic": 2,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "class_declaration.php",
      "fullyQualifiedName": "fields/class_declaration.php",
      "path": "fields/class_declaration.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 1,
      "functions": 2,
      "fields": 2,
      "lines": 18,
      "codeLines": 16,
      "commentLines": 0,
      "blankLines": 2,
      "complexity": 0,
      "cyclomatic": 2,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "getter_setter_declaration.php",
      "fullyQualifiedName": "fields/getter_setter_declaration.php",
      "path": "fields/getter_setter_declaration.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 1,
      "functions": 2,
      "fields": 1,
      "lines": 13,
      "codeLines": 11,
      "commentLines": 0,
      "blankLines": 2,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 1
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "ignore_collaborators.php",
      "fullyQualifiedName": "fields/ignore_collaborators.php",
      "path": "fields/ignore_collaborators.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 0,
      "lines": 4,
      "codeLines": 4,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "multiple.php",
      "fullyQualifiedName": "fields/multiple.php",
      "path": "fields/multiple.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 2,
      "lines": 4,
      "codeLines": 4,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "private_field_declaration.php",
      "fullyQualifiedName": "fields/private_field_declaration.php",
      "path": "fields/private_field_declaration.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 1,
      "functions": 1,
      "fields": 1,
      "lines": 9,
      "codeLines": 8,
      "commentLines": 0,
      "blankLines": 1,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 1
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "public_field_declaration.php",
      "fullyQualifiedName": "fields/public_field_declaration.php",
      "path": "fields/public_field_declaration.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 1,
      "functions": 0,
      "fields": 1,
      "lines": 5,
      "codeLines": 5,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "read.php",
      "fullyQualifiedName": "fields/read.php",
      "path": "fields/read.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 1,
      "lines": 3,
      "codeLines": 3,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "static_field_declaration.php",
      "fullyQualifiedName": "fields/static_field_declaration.php",
      "path": "fields/static_field_declaration.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 1,
      "functions": 0,
      "fields": 1,
      "lines": 5,
      "codeLines": 5,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "unique.php",
      "fullyQualifiedName": "fields/unique.php",
      "path": "fields/unique.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 1,
      "lines": 4,
      "codeLines": 4,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "write.php",
      "fullyQualifiedName": "fields/write.php",
      "path": "fields/write.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 0,
      "fields": 2,
      "lines": 4,
      "codeLines": 4,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "file_complexity.php",
      "fullyQualifiedName": "file_complexity.php",
      "path": "file_complexity.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 1,
      "fields": 0,
      "lines": 26,
      "codeLines": 26,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 55,
      "cyclomatic": 27,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "function_complexity.php",
      "fullyQualifiedName": "function_complexity.php",
      "path": "function_complexity.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 2,
      "fields": 0,
      "lines": 18,
      "codeLines": 17,
      "commentLines": 0,
      "blankLines": 1,
      "complexity": 15,
      "cyclomatic": 12,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "methods_with_parameters.php",
      "fullyQualifiedName": "functions/methods_with_parameters.php",
      "path": "functions/methods_with_parameters.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 1,
      "functions": 2,
      "fields": 2,
      "lines": 17,
      "codeLines": 15,
      "commentLines": 0,
      "blankLines": 2,
      "complexity": 0,
      "cyclomatic": 2,
      "lcom4": 1
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "methods_without_parameters.php",
      "fullyQualifiedName": "functions/methods_without_parameters.php",
      "path": "functions/methods_without_parameters.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 1,
      "functions": 4,
      "fields": 2,
      "lines": 12,
      "codeLines": 10,
      "commentLines": 0,
      "blankLines": 2,
      "complexity": 0,
      "cyclomatic": 2,
      "lcom4": 1
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "singleton_methods_with_parameters.php",
      "fullyQualifiedName": "functions/singleton_methods_with_parameters.php",
      "path": "functions/singleton_methods_with_parameters.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 1,
      "functions": 1,
      "fields": 0,
      "lines": 9,
      "codeLines": 9,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "singleton_methods_without_parameters.php",
      "fullyQualifiedName": "functions/singleton_methods_without_parameters.php",
      "path": "functions/singleton_methods_without_parameters.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 1,
      "functions": 1,
      "fields": 0,
      "lines": 7,
      "codeLines": 7,
      "commentLines": 0,
      "blankLines": 0,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "identical.php",
      "fullyQualifiedName": "identical.php",
      "path": "identical.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 2,
      "fields": 0,
      "lines": 34,
      "codeLines": 26,
      "commentLines": 0,
      "blankLines": 8,
      "complexity": 4,
      "cyclomatic": 21,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "lcom_0.php",
      "fullyQualifiedName": "lcom/lcom_0.php",
      "path": "lcom/lcom_0.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 2,
      "functions": 5,
      "fields": 1,
      "lines": 29,
      "codeLines": 21,
      "commentLines": 1,
      "blankLines": 7,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "lcom_1-1.php",
      "fullyQualifiedName": "lcom/lcom_1-1.php",
      "path": "lcom/lcom_1-1.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 1,
      "functions": 2,
      "fields": 0,
      "lines": 11,
      "codeLines": 8,
      "commentLines": 1,
      "blankLines": 2,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 1
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "lcom_1.php",
      "fullyQualifiedName": "lcom/lcom_1.php",
      "path": "lcom/lcom_1.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 1,
      "functions": 2,
      "fields": 1,
      "lines": 11,
      "codeLines": 8,
      "commentLines": 1,
      "blankLines": 2,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 1
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "lcom_2.php",
      "fullyQualifiedName": "lcom/lcom_2.php",
      "path": "lcom/lcom_2.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 2,
      "functions": 6,
      "fields": 3,
      "lines": 27,
      "codeLines": 20,
      "commentLines": 1,
      "blankLines": 6,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 2
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "lines.php",
      "fullyQualifiedName": "lines.php",
      "path": "lines.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 3,
      "fields": 0,
      "lines": 27,
      "codeLines": 14,
      "commentLines": 9,
      "blankLines": 4,
      "complexity": 0,
      "cyclomatic": 2,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "nested_control.php",
      "fullyQualifiedName": "nested_control.php",
      "path": "nested_control.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 4,
      "fields": 0,
      "lines": 60,
      "codeLines": 57,
      "commentLines": 0,
      "blankLines": 3,
      "complexity": 26,
      "cyclomatic": 27,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "parameters.php",
      "fullyQualifiedName": "parameters.php",
      "path": "parameters.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 4,
      "fields": 0,
      "lines": 15,
      "codeLines": 11,
      "commentLines": 1,
      "blankLines": 3,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "returns.php",
      "fullyQualifiedName": "returns.php",
      "path": "returns.php",
      "kind": "COMPONENT_TYPE_FILE",
      "language": "LANGUAGE_PHP",
      "files": 1,
      "classes": 0,
      "functions": 5,
      "fields": 0,
      "lines": 26,
      "codeLines": 22,
      "commentLines": 0,
      "blankLines": 4,
      "complexity": 0,
      "cyclomatic": 1,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "cognitive",
      "fullyQualifiedName": "cognitive",
      "path": "cognitive",
      "kind": "COMPONENT_TYPE_DIRECTORY",
      "files": 5,
      "classes": 0,
      "functions": 5,
      "fields": 0,
      "lines": 39,
      "codeLines": 38,
      "commentLines": 1,
      "blankLines": 0,
      "complexity": 12,
      "cyclomatic": 33,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "cyclomatic",
      "fullyQualifiedName": "cyclomatic",
      "path": "cyclomatic",
      "kind": "COMPONENT_TYPE_DIRECTORY",
      "files": 12,
      "classes": 0,
      "functions": 12,
      "fields": 0,
      "lines": 90,
      "codeLines": 87,
      "commentLines": 0,
      "blankLines": 3,
      "complexity": 15,
      "cyclomatic": 29,
      "lcom4": 0
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "fields",
      "fullyQualifiedName": "fields",
      "path": "fields",
      "kind": "COMPONENT_TYPE_DIRECTORY",
      "files": 10,
      "classes": 5,
      "functions": 5,
      "fields": 12,
      "lines": 69,
      "codeLines": 64,
      "commentLines": 0,
      "blankLines": 5,
      "complexity": 0,
      "cyclomatic": 11,
      "lcom4": 2
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "functions",
      "fullyQualifiedName": "functions",
      "path": "functions",
      "kind": "COMPONENT_TYPE_DIRECTORY",
      "files": 4,
      "classes": 4,
      "functions": 8,
      "fields": 4,
      "lines": 45,
      "codeLines": 41,
      "commentLines": 0,
      "blankLines": 4,
      "complexity": 0,
      "cyclomatic": 6,
      "lcom4": 2
    },
    {
      "buildId": "[..]",
      "analyzedAt": "[..]",
      "name": "lcom",
      "fullyQualifiedName": "lcom",
      "path": "lcom",
      "kind": "COMPONENT_TYPE_DIRECTORY",
      "files": 4,
      "classes": 6,
      "functions": 15,
      "fields": 5,
      "lines": 78,
      "codeLines": 57,
      "commentLines": 4,
      "blankLines": 17,
      "complexity": 0,
      "cyclomatic": 4,
      "lcom4": 4
    }
  ]
}
