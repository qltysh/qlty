name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest-16-cores
    permissions:
      contents: read
      actions: read
      pull-requests: write
      issues: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 1

      - name: Install Qlty CLI
        uses: qltysh/qlty-action/install@a19242102d17e497f437d7466aa01b528537e899

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@1780873c7b576612439a134613cc4cc74ce5538c
        with:
          toolchain: stable

      - name: Cache Rust
        uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0

      - name: Type check
        run: cargo check

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          use_commit_signing: true
          additional_permissions: |
            actions: read
          allowed_tools: |
            mcp__github__create_pull_request
            mcp__github__create_issue
            WebFetch(domain:docs.qlty.sh)
            Bash(git:*)
            Bash(cargo:*)
            Bash(TRYCMD=overwrite cargo:*)
            Bash(INSTA_UPDATE=always cargo:*)
            Bash(npm install:*)
            Bash(npm test:*)
            Bash(qlty:*)
