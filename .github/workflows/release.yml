name: Release
on:
  workflow_call:
    inputs:
      workflow_run_id:
        required: true
        type: string
permissions:
  contents: read
  "id-token": "write"
jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      tag: v${{ steps.version.outputs.version }}
    steps:
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.QLTY_APP_ID }}
          private-key: ${{ secrets.QLTY_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${STEPS_APP_TOKEN_OUTPUTS_APP_SLUG}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          STEPS_APP_TOKEN_OUTPUTS_APP_SLUG: ${{ steps.app-token.outputs.app-slug }}

      - name: Git config
        run: |
          git config --global core.longpaths true
          git config --global core.autocrlf false
          git config --global user.name '${STEPS_APP_TOKEN_OUTPUTS_APP_SLUG}[bot]'
          git config --global user.email '${STEPS_GET_USER_ID_OUTPUTS_USER_ID}+${STEPS_APP_TOKEN_OUTPUTS_APP_SLUG}[bot]@users.noreply.github.com>'
        env:
          STEPS_APP_TOKEN_OUTPUTS_APP_SLUG: ${{ steps.app-token.outputs.app-slug }}
          STEPS_GET_USER_ID_OUTPUTS_USER_ID: ${{ steps.get-user-id.outputs.user-id }}

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Install cargo-release
        uses: jaxxstorm/action-install-gh-release@6096f2a2bbfee498ced520b6922ac2c06e990ed2
        with:
          repo: crate-ci/cargo-release
          tag: v0.25.17

      - name: Fetch local artifacts
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ inputs.workflow_run_id }}
          pattern: artifacts-*
          path: target/distrib/
          merge-multiple: true

      - name: List artifacts
        run: find target/distrib/

      - name: Retrieve version number using cargo-release
        id: version
        run: |
          # Get the version number from the Cargo.toml file
          VERSION=$(cargo metadata --format-version 1 | jq -r ".workspace_members[0]" | cut -d# -f2)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Create release tag via GitHub API
        id: tag
        uses: octokit/request-action@05a2312de9f8207044c4c9e41fe19703986acc13
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        with:
          route: POST /repos/${{ github.repository }}/git/refs
          ref: "refs/tags/v${{ steps.version.outputs.version }}"
          sha: ${{ github.sha }}

      - name: Create GitHub Release
        env:
          PRERELEASE_FLAG: ${{ false && '--prerelease' || '' }}
          ANNOUNCEMENT_TITLE: Release v${{ steps.version.outputs.version }}
          ANNOUNCEMENT_BODY: Automated release created by GitHub Actions.
          RELEASE_COMMIT: ${{ github.sha }}
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          STEPS_VERSION_OUTPUTS_VERSION: ${{ steps.version.outputs.version }}
        run: |
          # Write and read notes from a file to avoid quoting breaking things
          echo "$ANNOUNCEMENT_BODY" > $RUNNER_TEMP/notes.txt
          gh release create "v${STEPS_VERSION_OUTPUTS_VERSION}" $PRERELEASE_FLAG --title "$ANNOUNCEMENT_TITLE" --notes-file "$RUNNER_TEMP/notes.txt" target/distrib/*
  s3-upload:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502
        with:
          role-to-assume: ${{ secrets.QLTY_RELEASE_AWS_ROLE_ARN }}
          role-session-name: ${{ vars.QLTY_RELEASE_AWS_ROLE_SESSION_NAME }}
          aws-region: ${{ vars.QLTY_RELEASE_AWS_REGION }}
      - name: Fetch local artifacts
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ inputs.workflow_run_id }}
          pattern: artifacts-*
          path: target/distrib/
          merge-multiple: true
      - name: List artifacts
        run: find target/distrib/
      - name: Upload to S3
        working-directory: target/distrib
        run: |
          aws s3 cp --recursive . ${VARS_QLTY_RELEASE_AWS_S3_DESTINATION}/${NEEDS_RELEASE_OUTPUTS_TAG}/
        env:
          VARS_QLTY_RELEASE_AWS_S3_DESTINATION: ${{ vars.QLTY_RELEASE_AWS_S3_DESTINATION }}
          NEEDS_RELEASE_OUTPUTS_TAG: ${{ needs.release.outputs.tag }}
  promote:
    needs: [release, s3-upload]
    uses: ./.github/workflows/release_promote.yml
    with:
      version: ${{ needs.release.outputs.tag }}
    secrets: inherit
