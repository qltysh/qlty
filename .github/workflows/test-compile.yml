name: Test Compile
on:
  workflow_dispatch:
  pull_request:
    paths:
      - .github/workflows/test-compile.yml
      - qlty-*/**
      - Cargo.*
      - "!**.md"
  push:
    branches:
      - "**"
      - "!main"
    paths:
      - .github/workflows/test-compile.yml
      - qlty-*/**
      - Cargo.*
      - "!**.md"

permissions:
  contents: read

jobs:
  compile:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux with musl
          - target: x86_64-unknown-linux-musl
            runner: ubuntu-22.04
            packages_install: sudo apt-get update && sudo apt-get install musl-tools

    name: ${{ matrix.target }}
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Git config
        run: |
          git config --global core.longpaths true
          git config --global core.autocrlf false

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Cache Rust
        uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0
        with:
          shared-key: ${{ matrix.runner }}
          cache-on-failure: true
          cache-all-crates: true

      - name: Install dependencies
        if: matrix.packages_install
        run: |
          ${{ matrix.packages_install }}

      - name: Build
        env:
          SEGMENT_WRITE_KEY: ${{ secrets.SEGMENT_WRITE_KEY }}
        run: |
          cargo build --target ${{ matrix.target }} --all-features --release

      - name: Run tests
        env:
          SEGMENT_WRITE_KEY: ${{ secrets.SEGMENT_WRITE_KEY }}
        run: |
          cargo test --target ${{ matrix.target }} --all-features --release
