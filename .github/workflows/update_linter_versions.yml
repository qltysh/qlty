name: Update linter versions

on:
  workflow_dispatch:
  schedule:
    - cron: "0 12 * * 2" # every Tuesday at 12:00

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  update-linter-versions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: üì¶ Use Node.js
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: qlty-plugins/plugins/package-lock.json

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3

      - name: Install Dependencies
        working-directory: qlty-plugins/plugins
        run: npm install

      - name: üì¶ Install qlty CLI
        run: "curl https://qlty.sh/install.sh | bash"

      - name: ‚§µÔ∏è Move `qlty` into PATH
        shell: bash
        run: echo "$HOME/.qlty/bin" >> $GITHUB_PATH

      - name: üîç Check qlty version
        shell: bash
        run: qlty --version

      - name: Run update-linter-versions script
        working-directory: qlty-plugins/plugins
        run: npm run update-linter-versions

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: Update linter versions"
          title: "chore: Update linter versions"
          body: "This pull request was automatically created by GitHub Actions to update linter versions."
          branch: update-linter-versions
          signoff: true
          sign-commits: true
          delete-branch: true
          add-paths: |
            qlty-plugins/plugins/linters/**

      - name: Read Issues and Create in GitHub
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');

            // Path to the JSON file containing the issues
            const filePath = path.join(process.env.GITHUB_WORKSPACE, 'qlty-plugins/plugins/github_issues.json');
            const issuesData = fs.readFileSync(filePath, 'utf8');
            const issues = JSON.parse(issuesData);

            // Loop through each issue object and create it
            for (const issue of issues) {
              const { title, body, assignees } = issue;
              console.log(`Creating issue: ${title}`);
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                assignees: assignees
              });
            }
